import{_ as t}from"./chunks/MyCodes.D9R76_RV.js";import{_ as l,c as i,o as a,aG as n,b as s,w as r,G as N,aH as c}from"./chunks/framework.CdnsPyyz.js";import"./chunks/theme.DKeXxrpS.js";const f=JSON.parse('{"title":"组合查询UNION","description":"","frontmatter":{"title":"组合查询UNION","author":"Zack Zheng","date":"2025/06/19 09:38","categories":["SQL必知必会"],"tags":["SQL"]},"headers":[],"relativePath":"books/techAndCodes/SQL必知必会/组合查询UNION.md","filePath":"books/techAndCodes/SQL必知必会/组合查询UNION.md","lastUpdated":1750392545000}'),d={name:"books/techAndCodes/SQL必知必会/组合查询UNION.md"};function _(u,e,h,p,I,m){const o=t;return a(),i("div",null,[e[0]||(e[0]=n('<h5 id="什么时候需要用到union" tabindex="-1">什么时候需要用到UNION？ <a class="header-anchor" href="#什么时候需要用到union" aria-label="Permalink to &quot;什么时候需要用到UNION？&quot;">​</a></h5><ul><li>在一个查询中从不同的表返回结构数据</li><li>对一个表执行多个查询，按一个查询返回数据</li></ul><p>任何具有多个WHERE子句的SELECT语句都可以作为一个组合查询</p><h5 id="union规则" tabindex="-1">UNION规则 <a class="header-anchor" href="#union规则" aria-label="Permalink to &quot;UNION规则&quot;">​</a></h5><ul><li>UNION必须由2条或者2条以上的SELECT语句组成，语句之间用关键字UNION分隔</li><li>UNION中的每个查询必须包含相同的列、表达式或聚集函数</li><li>列数据类型必须兼容</li><li>会自动去除重复行，可以使用<code>UNION ALL</code>会返回所有匹配行</li><li>排序只能用一条ORDER BY，位于最后</li></ul><h5 id="其他类型的union-不常用" tabindex="-1">其他类型的UNION（不常用） <a class="header-anchor" href="#其他类型的union-不常用" aria-label="Permalink to &quot;其他类型的UNION（不常用）&quot;">​</a></h5><ul><li>EXCEPT: 检索在第一个表中存在在第二个表中不存在的行</li><li>INTERSECT:检索两个表中都存在的行</li></ul>',7)),(a(),s(c,null,{default:r(()=>[N(o,{repo:"o-bricks",path:"sql/sqlIn10Minutes/union.sql",lang:"sql"})]),_:1}))])}const E=l(d,[["render",_]]);export{f as __pageData,E as default};
