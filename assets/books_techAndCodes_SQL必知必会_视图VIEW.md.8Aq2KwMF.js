import{_ as t}from"./chunks/MyCodes.BSd1dXNO.js";import{_ as i,c as o,o as a,aG as s,b as n,w as r,G as _,aH as c}from"./chunks/framework.CdnsPyyz.js";import"./chunks/theme.CaArFlcR.js";const E=JSON.parse('{"title":"视图VIEW","description":"","frontmatter":{"title":"视图VIEW","author":"Zack Zheng","date":"2025/06/19 09:38","categories":["SQL必知必会"],"tags":["SQL"]},"headers":[],"relativePath":"books/techAndCodes/SQL必知必会/视图VIEW.md","filePath":"books/techAndCodes/SQL必知必会/视图VIEW.md","lastUpdated":1750402026000}'),d={name:"books/techAndCodes/SQL必知必会/视图VIEW.md"};function p(u,e,h,m,S,f){const l=t;return a(),o("div",null,[e[0]||(e[0]=s('<p>视图是虚拟的表，只包含使用时动态检索数据的查询。视图本身不包含数据，返回的数据是从其他表中检索出来的。</p><h5 id="为什么用视图" tabindex="-1">为什么用视图？ <a class="header-anchor" href="#为什么用视图" aria-label="Permalink to &quot;为什么用视图？&quot;">​</a></h5><ul><li>重用SQL语句</li><li>简化复杂SQL操作。在编写查询后，可以方便的重用它而不必知道基本查询细节</li><li>使用表的一部份而不是整个表</li><li>保护数据。可以授予用户访问表的特定部分的权限，而不是整个表的访问权限</li><li>更改数据格式和表示。视图可返回与底层表的表示和格式不同的数据</li></ul><h5 id="视图的规则" tabindex="-1">视图的规则 <a class="header-anchor" href="#视图的规则" aria-label="Permalink to &quot;视图的规则&quot;">​</a></h5><ul><li>视图命名需唯一</li><li>可以创建的视图数目没有限制</li><li>创建视图，必须要有足够的访问权限</li><li>视图可以嵌套（嵌套视图性能下降严重）</li><li>许多DBMS禁止在视图中使用ORDER BY</li><li>有些DBMS要求对返回的所有列进行命名</li><li>视图不能索引，也不能有关联的触发器或默认值</li><li>有些DBMS把视图作为只读的查询，只能从视图检索数据，不能写入底层表</li></ul>',5)),(a(),n(c,null,{default:r(()=>[_(l,{repo:"o-bricks",path:"sql/sqlIn10Minutes/view.sql",lang:"sql"})]),_:1}))])}const I=i(d,[["render",p]]);export{E as __pageData,I as default};
