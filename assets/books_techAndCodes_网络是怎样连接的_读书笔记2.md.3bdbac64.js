import{_ as e,c as t,o as l,a as o}from"./app.8e9d25f9.js";const b=JSON.parse('{"title":"网络是怎样连接的2","description":"","frontmatter":{"title":"网络是怎样连接的2","author":"Zack Zheng","date":"2023/10/20 21:42","categories":["网络是怎样连接的"],"tags":["http","读书笔记"]},"headers":[],"relativePath":"books/techAndCodes/网络是怎样连接的/读书笔记2.md","lastUpdated":1697726662000}'),i={name:"books/techAndCodes/网络是怎样连接的/读书笔记2.md"},a=o('<ul><li>去哪查域名对应的IP</li></ul><blockquote><p>DNS服务器（它是服务器，也有ip地址，它的地址是作为TCP/IP设置项设置好的）</p></blockquote><ul><li>谁去查</li></ul><blockquote><p>DNS客户端（操作系统Socket库）</p></blockquote><ul><li>谁发的查的消息</li></ul><blockquote><p>操作系统内部协议栈（UDP消息）</p></blockquote><ul><li>查完了存哪里</li></ul><blockquote><p>存在内存里，浏览器去拿这个ip</p></blockquote><ul><li>查ip的消息里有些什么信息</li></ul><blockquote><p>域名、class（没什么用，都是IN表示互联网）、记录类型（A表示域名对应的是IP地址，MX表示域名对应的是邮件服务器）</p></blockquote><h4 id="ip地址知道了-接下来委托协议栈发送消息" tabindex="-1">ip地址知道了，接下来委托协议栈发送消息 <a class="header-anchor" href="#ip地址知道了-接下来委托协议栈发送消息" aria-hidden="true">#</a></h4><h5 id="http的工作过程" tabindex="-1">http的工作过程 <a class="header-anchor" href="#http的工作过程" aria-hidden="true">#</a></h5><ul><li>谁来做</li></ul><blockquote><p>调用Socket库中的程序组件</p></blockquote><ul><li>什么过程</li></ul><ol><li>创建套接字 （上帝说要有一根管子，套接字只是一个概念，不是真的有套接字）<br> 创建套接字返回描述符（描述符存在内存里用来识别不同的套接字）<br> 因为有很多不同的数据通信的应用，不一定都是浏览器</li><li>连接（接管子） 客户端的套接字和服务器的套接字连接起来<br> （需要3个参数：上一步的描述符、ip地址、端口号）<br> 注意：这里的描述符是给自己用的，表示自己使用哪一个套接字（哪根管子）连接服务器的哪个端口（哪根管子）</li><li>传数据（送水） 客户端通过Socket库调用write程序组件，送数据<br> 服务器收到，响应<br> 客户端通过Socket库调用read程序组件，接响应到内存的缓存区</li><li>关管道<br> 客户端收到响应后，通过Socket库调用close组件，关闭并删除套接字</li></ol>',16),c=[a];function r(p,s,u,_,d,n){return l(),t("div",null,c)}const k=e(i,[["render",r]]);export{b as __pageData,k as default};
