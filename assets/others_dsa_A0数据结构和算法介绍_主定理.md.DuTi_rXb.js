import{_ as t,c as e,o as i,aG as r}from"./chunks/framework.DsljODgs.js";const m=JSON.parse('{"title":"主定理","description":"","frontmatter":{"title":"主定理","author":"Zack Zheng","date":"2025/03/06 11:04","categories":["数据结构和算法"],"tags":["数据结构","算法"]},"headers":[],"relativePath":"others/dsa/A0数据结构和算法介绍/主定理.md","filePath":"others/dsa/A0数据结构和算法介绍/主定理.md","lastUpdated":1741936085000}'),l={name:"others/dsa/A0数据结构和算法介绍/主定理.md"};function s(n,a,o,c,p,E){return i(),e("div",null,[...a[0]||(a[0]=[r('<p>主方法是用于求解形如以下形式的递归关系的一个公式：</p><p><img src="https://gitee.com/zackzhengxy/picGallery/raw/main/imgs/%E4%B8%BB%E5%AE%9A%E7%90%86%E5%BD%A2%E5%BC%8F.png" alt="主定理形式" loading="lazy"></p><p>一个渐近正函数意味着对于足够大的n值，我们有f(n)&gt;0。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>主定理被用于以一种简单快捷的方式计算递归关系（分治法算法）的时间复杂度。</p></div><h4 id="主定理" tabindex="-1">主定理 <a class="header-anchor" href="#主定理" aria-label="Permalink to &quot;主定理&quot;">​</a></h4><p>如果 a≥1 且 b&gt;1 是常数，并且 f(n) 是一个渐近正函数，那么一个递归关系的时间复杂度由以下情况给出</p><p><img src="https://gitee.com/zackzhengxy/picGallery/raw/main/imgs/%E4%B8%BB%E5%AE%9A%E7%90%86%E5%85%AC%E5%BC%8F%E9%83%A8%E5%88%86.png" alt="主定理公式部分" loading="lazy"><img src="https://gitee.com/zackzhengxy/picGallery/raw/main/imgs/%E4%B8%BB%E5%AE%9A%E7%90%86%E8%A7%A3%E9%87%8A.png" alt="主定理解释" loading="lazy"></p><h4 id="主定理的实例求解" tabindex="-1">主定理的实例求解 <a class="header-anchor" href="#主定理的实例求解" aria-label="Permalink to &quot;主定理的实例求解&quot;">​</a></h4><p><img src="https://gitee.com/zackzhengxy/picGallery/raw/main/imgs/%E4%B8%BB%E5%AE%9A%E7%90%86%E6%B1%82%E8%A7%A3%E7%A4%BA%E4%BE%8B.png" alt="主定理求解示例" loading="lazy"></p><h4 id="主定理的局限性" tabindex="-1">主定理的局限性 <a class="header-anchor" href="#主定理的局限性" aria-label="Permalink to &quot;主定理的局限性&quot;">​</a></h4><p><img src="https://gitee.com/zackzhengxy/picGallery/raw/main/imgs/%E4%B8%BB%E5%AE%9A%E7%90%86%E5%B1%80%E9%99%90%E6%80%A7.png" alt="主定理局限性" loading="lazy"></p>',11)])])}const d=t(l,[["render",s]]);export{m as __pageData,d as default};
