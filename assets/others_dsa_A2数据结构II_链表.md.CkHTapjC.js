import{_ as i,c as a,o as n,aG as l}from"./chunks/framework.DGtm8y85.js";const D=JSON.parse('{"title":"链表","description":"","frontmatter":{"title":"链表","author":"Zack Zheng","date":"2025/03/06 10:56","categories":["数据结构和算法"],"tags":["数据结构","算法"]},"headers":[],"relativePath":"others/dsa/A2数据结构II/链表.md","filePath":"others/dsa/A2数据结构II/链表.md","lastUpdated":1743563367000}'),h={name:"others/dsa/A2数据结构II/链表.md"};function p(k,s,t,e,r,B){return n(),a("div",null,s[0]||(s[0]=[l(`<p>链表是一种线性数据结构，包含一系列相互连接的节点。如下，每一个节点包含<code>数据</code>和下一个节点的<code>地址</code>。</p><p><img src="https://gitee.com/zackzhengxy/picGallery/raw/main/imgs/linked-list-concept.webp" alt="" loading="lazy"></p><p>你总得从某个地方开始，所以我们给链表中第一个节点的地址起了一个特殊的名字，叫做 “头指针（<code>HEAD</code>）”。此外，链表中的最后一个节点是可以识别出来的，因为它的 “next” 部分指向了空值（<code>NULL</code>）。</p><p>链表可以有多种类型：单链表、双链表和循环链表。在本文中，我们将重点介绍单链表。若想了解其他类型的链表，请访问 “<a href="./链表的类型.html">链表的类型</a>”。</p><h4 id="链表的表示形式" tabindex="-1">链表的表示形式 <a class="header-anchor" href="#链表的表示形式" aria-label="Permalink to &quot;链表的表示形式&quot;">​</a></h4><p>让我们来看一下链表每一个节点是怎么表示的。每个节点包含：</p><ul><li>数据项</li><li>另一个节点的地址</li></ul><p>我们将数据项和指向下一个节点的引用都封装在一个结构体中，如下所示：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">struct</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> node </span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">  int</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> data</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">  struct</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> node </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">next</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>理解链表节点的结构是掌握链表的关键。</p><p>每个结构体节点都有一个数据项和一个指向另一个结构体节点的指针。让我们创建一个包含三个数据项的简单链表，以便理解其工作原理。</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">/* Initialize nodes */</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">struct</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> node </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">struct</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> node </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">one </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> NULL</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">struct</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> node </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">two </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> NULL</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">struct</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> node </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">three </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> NULL</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">/* Allocate memory */</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">one </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> malloc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">sizeof</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">struct</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">));</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">two </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> malloc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">sizeof</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">struct</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">));</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">three </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> malloc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">sizeof</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">struct</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">/* Assign data values */</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">one</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">data </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">two</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">data </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">three</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">data</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">/* Connect nodes */</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">one</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">next </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> two</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">two</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">next </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> three</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">three</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">next </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> NULL</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">/* Save address of first node in head */</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">head </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> one</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>如果你对上面的任何一行内容都不理解，你所需要做的就是重新复习一下<a href="https://www.programiz.com/c-programming/c-structures-pointers" target="_blank" rel="noreferrer">C语言指针和结构体</a>的知识。</p><p>经过几个步骤，我们已经创建了一个简单的有3个节点的链表</p><p><img src="https://gitee.com/zackzhengxy/picGallery/raw/main/imgs/linked-list-with-data.webp" alt="" loading="lazy"></p><p>链表的强大之处在于它能够断开链并重新连接起来。例如，如果你想在元素 1 和元素 2 之间插入一个元素 4，步骤将会是：</p><ul><li>创建一个新的结构体节点，并为其分配内存。</li><li>将它的数据值设置为 4。</li><li>将它的 “next” 指针指向那个数据值为 2 的结构体节点。</li><li>将数据值为“1” 的节点的 “next” 指针指向我们刚刚创建的节点。</li></ul><p>在数组中做类似的操作就需要移动所有后续元素的位置。</p><p>在 Python 和 Java 中，可以使用类来实现链表，如下方代码所示。</p><hr><h4 id="链表有什么用" tabindex="-1">链表有什么用 <a class="header-anchor" href="#链表有什么用" aria-label="Permalink to &quot;链表有什么用&quot;">​</a></h4><p>链表是最受欢迎且高效的数据结构之一，在诸如 C、C++、Python、Java 和 C# 等每一种编程语言中都有其实现方式。</p><p>除此之外，链表是学习指针如何工作的绝佳途径。通过练习如何操作链表，你可以为学习更高级的数据结构（如图和树）做好准备。</p><hr><h4 id="python、java、c-和-c-中链表的实现示例" tabindex="-1">Python、Java、C 和 C++ 中链表的实现示例 <a class="header-anchor" href="#python、java、c-和-c-中链表的实现示例" aria-label="Permalink to &quot;Python、Java、C 和 C++ 中链表的实现示例&quot;">​</a></h4><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-mIM7e" id="tab-KdbumUp" checked><label data-title="Python" for="tab-KdbumUp">Python</label><input type="radio" name="group-mIM7e" id="tab-9aESgvH"><label data-title="Java" for="tab-9aESgvH">Java</label><input type="radio" name="group-mIM7e" id="tab-PckYSNx"><label data-title="C" for="tab-PckYSNx">C</label><input type="radio" name="group-mIM7e" id="tab-bPWKJRC"><label data-title="C++" for="tab-bPWKJRC">C++</label></div><div class="blocks"><div class="language-Python vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;"># Linked list implementation in Python</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#FFCB6B;"> Node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">    # Creating a node</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">    def</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> __init__</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E5C07B;--shiki-light-font-style:italic;--shiki-dark:#F07178;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;"> item</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">):</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">        self</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">item</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> item</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">        self</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">next</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> None</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#FFCB6B;"> LinkedList</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">    def</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> __init__</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E5C07B;--shiki-light-font-style:italic;--shiki-dark:#F07178;--shiki-dark-font-style:italic;">self</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">):</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">        self</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">head</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> None</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">if</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> __name__</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> ==</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">__main__</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">    linked_list </span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> LinkedList</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">    # Assign item values</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">    linked_list</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">head</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> Node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">    second </span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> Node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">    third </span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> Node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">    # Connect nodes</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">    linked_list</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">next</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> second</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">    second</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">next</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> third</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">    # Print the linked list item</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">    while</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> linked_list</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">head</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> !=</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> None</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span></span>
<span class="line"><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;">        print</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#82AAFF;">linked_list</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">item</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#E06C75;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;"> end</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">        linked_list</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">head</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> linked_list</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">next</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><div class="language-Java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// Linked list implementation in Java</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#FFCB6B;"> LinkedList</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">  // Creating a node</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#C792EA;">  Node</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">  static</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#FFCB6B;"> Node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">    int</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> value</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#C792EA;">    Node</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> next</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">    Node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">int</span><span style="--shiki-light:#E06C75;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;"> d</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">      value </span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> d</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">      next </span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> null</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">  public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;"> static</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;"> void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> main</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#C792EA;">String</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">[]</span><span style="--shiki-light:#E06C75;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;"> args</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#C792EA;">    LinkedList</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> linkedList</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> new</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> LinkedList</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">    // Assign value values</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">    linkedList</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">head</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> new</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> Node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#C792EA;">    Node</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> second</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> new</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> Node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#C792EA;">    Node</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> third</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> new</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> Node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">    // Connect nodess</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">    linkedList</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">next</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> second</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">    second</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">next</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> third</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">    // printing node-value</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">    while</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">linkedList</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">head</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> !=</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> null</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">      System</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">out</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">print</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">linkedList</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">value</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> +</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">      linkedList</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">head</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> linkedList</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">next</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><div class="language-C vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// Linked list implementation in C</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">#include</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &lt;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">stdio.h</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">#include</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &lt;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">stdlib.h</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// Creating a node</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">struct</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> node </span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">  int</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> value</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">  struct</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> node </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">next</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// print the linked list value</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">void</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> printLinkedlist</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">struct</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> node </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#E06C75;--shiki-light-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic;">p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">  while</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">p </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">!=</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> NULL</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">    printf</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#D19A66;--shiki-dark:#F07178;">%d</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">value</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">    p </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">next</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">int</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> main</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">  // Initialize nodes</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">  struct</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> node </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">  struct</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> node </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">one </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> NULL</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">  struct</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> node </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">two </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> NULL</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">  struct</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> node </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">three </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> NULL</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">  // Allocate memory</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">  one </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> malloc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">sizeof</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">struct</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">));</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">  two </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> malloc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">sizeof</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">struct</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">));</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">  three </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> malloc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">sizeof</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">struct</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">  // Assign value values</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">  one</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">value</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">  two</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">value</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">  three</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">value</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">  // Connect nodes</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">  one</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">next</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> two</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">  two</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">next</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> three</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">  three</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">next</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> NULL</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">  // printing node-value</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">  head </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> one</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">  printLinkedlist</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><div class="language-C++ vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">C++</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// Linked list implementation in C++</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">#include</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &lt;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">bits/stdc++.h</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">#include</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &lt;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">iostream</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#F78C6C;">using</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;"> namespace</span><span style="--shiki-light:#E5C07B;--shiki-dark:#FFCB6B;"> std</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// Creating a node</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">class</span><span style="--shiki-light:#E5C07B;--shiki-dark:#FFCB6B;"> Node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">   public</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">:</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">  int</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> value</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">  Node</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> next</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">int</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> main</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">  Node</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">  Node</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> one </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> NULL</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">  Node</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> two </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> NULL</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">  Node</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> three </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> NULL</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">  // allocate 3 nodes in the heap</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">  one </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> new</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> Node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">();</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">  two </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> new</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> Node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">();</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">  three </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> new</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> Node</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">  // Assign value values</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">  one</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">value</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">  two</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">value</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">  three</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">value</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">  // Connect nodes</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">  one</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">next</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> two</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">  two</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">next</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> three</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">  three</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">next</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> NULL</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">  // print the linked list value</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">  head </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> one</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">  while</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">head </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">!=</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> NULL</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">    cout </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">&lt;&lt;</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">value</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">    head </span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">-&gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">next</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div></div></div><hr><h4 id="链表的复杂度" tabindex="-1">链表的复杂度 <a class="header-anchor" href="#链表的复杂度" aria-label="Permalink to &quot;链表的复杂度&quot;">​</a></h4><p>时间复杂度</p><table tabindex="0"><thead><tr><th>操作</th><th>最坏情况</th><th>平均</th></tr></thead><tbody><tr><td>查询</td><td>O(n)</td><td>O(n)</td></tr><tr><td>插入</td><td>O(1)</td><td>O(1)</td></tr><tr><td>删除</td><td>O(1)</td><td>O(1)</td></tr></tbody></table><p>空间复杂度：<code>O(n)</code></p><hr><p>链表的应用</p><ul><li>动态内存分配</li><li>在栈和队列中实现</li><li>在软件的撤销功能中（应用）</li><li>哈希表，图</li></ul>`,34)]))}const d=i(h,[["render",p]]);export{D as __pageData,d as default};
