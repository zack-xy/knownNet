import{_ as e,c as a,o as t,a as r}from"./app.a4238fe0.js";const f=JSON.parse('{"title":"useRecuder和startTransition、useTransition、useDeferredValue","description":"","frontmatter":{"title":"useRecuder和startTransition、useTransition、useDeferredValue","author":"Zack Zheng","date":"2025/02/27 11:04","categories":["何以编程"],"tags":["React18"]},"headers":[],"relativePath":"others/feature/React特性/useRecuder及其他.md","lastUpdated":1740628356000}'),s={name:"others/feature/React特性/useRecuder及其他.md"},n=r('<h4 id="usereducer" tabindex="-1">useReducer <a class="header-anchor" href="#usereducer" aria-hidden="true">#</a></h4><p>useState 的替代方案。它接收一个形如 (state, action) =&gt; newState 的 reducer，并返回当前的 state 以及与其配套的 dispatch 方法</p><h4 id="starttransition" tabindex="-1">startTransition <a class="header-anchor" href="#starttransition" aria-hidden="true">#</a></h4><p>利用startTransition这个方法来实现不紧急的任务操作,这会告诉 React 它们可以被中断执行。这样可以把紧急的任务先更新，不紧急的任务后更新。</p><h5 id="usetransition" tabindex="-1">useTransition <a class="header-anchor" href="#usetransition" aria-hidden="true">#</a></h5><p>辅助使用startTransition<br> useTransition会得到一个表示过渡任务的等待状态，和一个启动该过渡任务的函数</p><h5 id="usedeferredvalue" tabindex="-1">useDeferredValue <a class="header-anchor" href="#usedeferredvalue" aria-hidden="true">#</a></h5><p>startTransition的简化写法</p>',8),i=[n];function d(u,o,c,h,_,p){return t(),a("div",null,i)}const T=e(s,[["render",d]]);export{f as __pageData,T as default};
