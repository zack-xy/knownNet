import{_ as r}from"./chunks/MyCodes.BJDCdYaD.js";import{_ as F}from"./chunks/theme.nDu8YGQ2.js";import{_ as d,c as B,o as t,j as i,G as a,b as l,aG as D,a as n,w as h,aH as k}from"./chunks/framework.DsljODgs.js";const f=JSON.parse('{"title":"useRecuder和startTransition、useTransition、useDeferredValue、传送门","description":"","frontmatter":{"title":"useRecuder和startTransition、useTransition、useDeferredValue、传送门","author":"Zack Zheng","date":"2025/02/27 11:04","categories":["何以编程"],"tags":["React"]},"headers":[],"relativePath":"others/feature/React特性/useRecuder及其他.md","filePath":"others/feature/React特性/useRecuder及其他.md","lastUpdated":1759066681000}'),o={name:"others/feature/React特性/useRecuder及其他.md"};function g(y,s,u,c,A,C){const p=F,e=r;return t(),B("div",null,[s[0]||(s[0]=i("h4",{id:"usereducer",tabindex:"-1"},[n("useReducer "),i("a",{class:"header-anchor",href:"#usereducer","aria-label":'Permalink to "useReducer"'},"​")],-1)),s[1]||(s[1]=i("p",null,"useState 的替代方案。它接收一个形如 (state, action) => newState 的 reducer，并返回当前的 state 以及与其配套的 dispatch 方法",-1)),a(p,{src:"https://gitee.com/zackzhengxy/picGallery/raw/main/imgs/useReducer是什么.png",lazy:""}),s[2]||(s[2]=i("p",null,[i("code",null,"const [state, dispatch] = useReducer(reducer, initialArg, init);")],-1)),s[3]||(s[3]=i("ol",null,[i("li",null,"reducer是一个处理函数，用于更新状态，接收两个参数：当前状态和一个动作对象，返回一个新的状态。"),i("li",null,"initialArg是state的初始值"),i("li",null,"init是一个可选的函数，用于初始化修改state（修改state，传入的参数是初始化的state即initialArg），如果编写了init函数，默认使用init函数的返回值，否则使用initialArg")],-1)),(t(),l(k,null,{default:h(()=>[a(e,{title:"useReducer使用示例代码",repo:"o-bricks",path:"demoCodes/React/react-demo/src/useReducer.tsx",lazy:""})]),_:1})),s[4]||(s[4]=i("hr",null,null,-1)),s[5]||(s[5]=i("h4",{id:"usesyncexternalstore",tabindex:"-1"},[i("a",{href:"https://zh-hans.react.dev/reference/react/useSyncExternalStore",target:"_blank",rel:"noreferrer"},"useSyncExternalStore"),n(),i("a",{class:"header-anchor",href:"#usesyncexternalstore","aria-label":'Permalink to "[useSyncExternalStore](https://zh-hans.react.dev/reference/react/useSyncExternalStore)"'},"​")],-1)),s[6]||(s[6]=i("p",null,"useSyncExternalStore = React 官方提供的“把外部数据源订阅+快照”封装成 Hook，使它表现得像 React 内部状态一样。",-1)),s[7]||(s[7]=i("p",null,[i("code",null,"const snapshot = useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot?)")],-1)),s[8]||(s[8]=i("ul",null,[i("li",null,"subscribe: 一个函数，接收一个callback参数(当store发生改变时应该调用提供的callback),返回一个函数用于取消订阅"),i("li",null,"getSnapshot: 一个函数，返回组件需要的 store 中的数据快照"),i("li",null,"getServerSnapshot: 可选，一个函数，返回 store 中数据的初始快照。用于服务端渲染")],-1)),(t(),l(k,null,{default:h(()=>[a(e,{title:"自定义hook，store来自localStorage",repo:"o-bricks",path:"demoCodes/React/react-demo/src/useSyncExternalStore1.ts",lazy:""})]),_:1})),(t(),l(k,null,{default:h(()=>[a(e,{title:"自定义hook，store来自window.location.href",repo:"o-bricks",path:"demoCodes/React/react-demo/src/useSyncExternalStore2.ts",lazy:""})]),_:1})),s[9]||(s[9]=i("hr",null,null,-1)),s[10]||(s[10]=i("h5",{id:"starttransition、usetransition",tabindex:"-1"},[n("startTransition、useTransition "),i("a",{class:"header-anchor",href:"#starttransition、usetransition","aria-label":'Permalink to "startTransition、useTransition"'},"​")],-1)),s[11]||(s[11]=i("p",null,[n("辅助使用startTransition"),i("br"),n(" useTransition会得到一个表示过渡任务的等待状态，和一个启动该过渡任务的函数")],-1)),s[12]||(s[12]=i("p",null,[i("code",null,"const [isPending, startTransition] = useTransition()")],-1)),(t(),l(k,null,{default:h(()=>[a(e,{title:"useTransition使用示例",repo:"o-bricks",path:"demoCodes/React/react-demo/src/useTransition.tsx",lazy:""})]),_:1})),s[13]||(s[13]=i("hr",null,null,-1)),s[14]||(s[14]=i("h5",{id:"usedeferredvalue",tabindex:"-1"},[n("useDeferredValue "),i("a",{class:"header-anchor",href:"#usedeferredvalue","aria-label":'Permalink to "useDeferredValue"'},"​")],-1)),s[15]||(s[15]=i("p",null,"功能和useTransition类似，都是为了性能优化使用的",-1)),a(p,{src:"https://gitee.com/zackzhengxy/picGallery/raw/main/imgs/useTransition和useDeferredValue的区别.png",lazy:""}),s[16]||(s[16]=D("",6))])}const S=d(o,[["render",g]]);export{f as __pageData,S as default};
