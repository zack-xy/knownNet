import{_ as d}from"./chunks/MyCodes.B1HFYwGI.js";import{_ as n,c as s,o as e,aG as t,b as o,w as i,G as l,aH as h}from"./chunks/framework.DsljODgs.js";import"./chunks/theme.D2WgP2bZ.js";const k=JSON.parse('{"title":"zod4.x的特性","description":"","frontmatter":{"title":"zod4.x的特性","author":"Zack Zheng","date":"2025/08/19 14:33","categories":["何以编程"],"tags":["React","前端"]},"headers":[],"relativePath":"others/feature/React特性/zod4的特性.md","filePath":"others/feature/React特性/zod4的特性.md","lastUpdated":1755597279000}'),c={name:"others/feature/React特性/zod4的特性.md"};function u(p,a,f,_,m,b){const r=d;return e(),s("div",null,[a[0]||(a[0]=t('<p>内容来自<a href="https://zod.dev/" target="_blank" rel="noreferrer">官网(zod.dev)</a></p><p>Zod是一个TypeScript优先验证库。使用Zod，您可以定义可用于验证数据的模式，从简单的字符串到复杂的嵌套对象。</p><ul><li>使用<code>parse</code>校验数据，校验通过返回数据的深拷贝，校验不通过抛出错误</li><li>使用<code>safeParse</code>校验数据，返回一个纯对象（包含校验结果）</li><li>使用<code>parseAsync</code>异步校验数据</li></ul>',3)),(e(),o(h,null,{default:i(()=>[l(r,{repo:"o-bricks",path:"demoCodes/React/vite-react/src/form/ZodDemo.tsx",lazy:""})]),_:1})),a[1]||(a[1]=t('<hr><h4 id="基本api" tabindex="-1">基本API <a class="header-anchor" href="#基本api" aria-label="Permalink to &quot;基本API&quot;">​</a></h4><h5 id="基本类型" tabindex="-1">基本类型 <a class="header-anchor" href="#基本类型" aria-label="Permalink to &quot;基本类型&quot;">​</a></h5><h5 id="coerce" tabindex="-1">coerce <a class="header-anchor" href="#coerce" aria-label="Permalink to &quot;coerce&quot;">​</a></h5><h5 id="字符串" tabindex="-1">字符串 <a class="header-anchor" href="#字符串" aria-label="Permalink to &quot;字符串&quot;">​</a></h5><h5 id="模板文字" tabindex="-1">模板文字 <a class="header-anchor" href="#模板文字" aria-label="Permalink to &quot;模板文字&quot;">​</a></h5><h5 id="数字" tabindex="-1">数字 <a class="header-anchor" href="#数字" aria-label="Permalink to &quot;数字&quot;">​</a></h5><h5 id="可选项" tabindex="-1">可选项 <a class="header-anchor" href="#可选项" aria-label="Permalink to &quot;可选项&quot;">​</a></h5><h5 id="object对象" tabindex="-1">Object对象 <a class="header-anchor" href="#object对象" aria-label="Permalink to &quot;Object对象&quot;">​</a></h5><h5 id="递归对象、自引用类型" tabindex="-1">递归对象、自引用类型 <a class="header-anchor" href="#递归对象、自引用类型" aria-label="Permalink to &quot;递归对象、自引用类型&quot;">​</a></h5><h5 id="数组" tabindex="-1">数组 <a class="header-anchor" href="#数组" aria-label="Permalink to &quot;数组&quot;">​</a></h5><h5 id="元组" tabindex="-1">元组 <a class="header-anchor" href="#元组" aria-label="Permalink to &quot;元组&quot;">​</a></h5><h5 id="map" tabindex="-1">Map <a class="header-anchor" href="#map" aria-label="Permalink to &quot;Map&quot;">​</a></h5><h5 id="set" tabindex="-1">Set <a class="header-anchor" href="#set" aria-label="Permalink to &quot;Set&quot;">​</a></h5><h5 id="自定义验证-refine" tabindex="-1">自定义验证.refine() <a class="header-anchor" href="#自定义验证-refine" aria-label="Permalink to &quot;自定义验证.refine()&quot;">​</a></h5><h5 id="自定义验证增强版-superrefine" tabindex="-1">自定义验证增强版：superRefine <a class="header-anchor" href="#自定义验证增强版-superrefine" aria-label="Permalink to &quot;自定义验证增强版：superRefine&quot;">​</a></h5><p>专为需要‌跨字段协作‌或‌多错误反馈‌的复杂验证场景（可以多错误、全Schema字段、可主动终止验证）</p><h5 id="transform和pipe" tabindex="-1">transform和pipe <a class="header-anchor" href="#transform和pipe" aria-label="Permalink to &quot;transform和pipe&quot;">​</a></h5>',18)),(e(),o(h,null,{default:i(()=>[l(r,{repo:"o-bricks",path:"demoCodes/React/vite-react/src/form/ZodApi.tsx",lazy:""})]),_:1}))])}const S=n(c,[["render",u]]);export{k as __pageData,S as default};
