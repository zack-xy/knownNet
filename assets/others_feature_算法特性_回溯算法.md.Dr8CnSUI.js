import{_ as e}from"./chunks/MyCodes.C_DTuWNS.js";import{_ as p,c as l,o as s,aG as r,b as t,w as i,G as c,aH as o}from"./chunks/framework.CdnsPyyz.js";const v=JSON.parse('{"title":"回溯算法","description":"","frontmatter":{"title":"回溯算法","author":"Zack Zheng","date":"2025/06/03 11:37","categories":["何以编程"],"tags":["算法"]},"headers":[],"relativePath":"others/feature/算法特性/回溯算法.md","filePath":"others/feature/算法特性/回溯算法.md","lastUpdated":1748931264000}'),m={name:"others/feature/算法特性/回溯算法.md"};function d(u,a,_,b,h,f){const n=e;return s(),l("div",null,[a[0]||(a[0]=r(`<h5 id="回溯代码框架" tabindex="-1">回溯代码框架 <a class="header-anchor" href="#回溯代码框架" aria-label="Permalink to &quot;回溯代码框架&quot;">​</a></h5><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span>void backtracking(参数) {</span></span>
<span class="line"><span>    if (终止条件) {</span></span>
<span class="line"><span>      存放结果;</span></span>
<span class="line"><span>      return;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    for (选择本层集合中元素 (画成树，就是树节点孩子的大小)) {</span></span>
<span class="line"><span>      处理节点;</span></span>
<span class="line"><span>      backtracking();</span></span>
<span class="line"><span>      回溯，撤销处理结果;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>上面代码框架的一个例子：</p>`,3)),(s(),t(o,null,{default:i(()=>[c(n,{repo:"o-algorithm",path:"algorithm/回溯算法/combine.java",lang:"java"})]),_:1}))])}const x=p(m,[["render",d]]);export{v as __pageData,x as default};
