import{_ as e,c as s,o as n,aG as t}from"./chunks/framework.CdnsPyyz.js";const h=JSON.parse('{"title":"异或运算规则","description":"","frontmatter":{"title":"异或运算规则","author":"Zack Zheng","date":"2025/05/08 09:28","categories":["何以编程"],"tags":["算法"]},"headers":[],"relativePath":"others/feature/算法特性/异或运算规则.md","filePath":"others/feature/算法特性/异或运算规则.md","lastUpdated":1746671625000}'),l={name:"others/feature/算法特性/异或运算规则.md"};function p(r,a,o,i,c,d){return n(),s("div",null,a[0]||(a[0]=[t(`<h5 id="异或运算规则" tabindex="-1">异或运算规则 <a class="header-anchor" href="#异或运算规则" aria-label="Permalink to &quot;异或运算规则&quot;">​</a></h5><p>异或的规则简单来说就是相同为0，不同为1(a)</p><p>在常规的编程中，异或运算<code>^</code>主要用于整数类型的数据,或者布尔类型（两个操作数相同为false，不同为true）</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span>0^0=0;</span></span>
<span class="line"><span>0^a=a;</span></span>
<span class="line"><span>a^a=0;</span></span>
<span class="line"><span>a^b^a=b;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>上面的不同指的是，<span class="red">一个为0，另一个不为0</span>，如果两个是不同的不为0的数字呢？</p><p>两个不相同的数字就是二进制按位异或运算了</p></div><h5 id="异或操作的性质" tabindex="-1">异或操作的性质 <a class="header-anchor" href="#异或操作的性质" aria-label="Permalink to &quot;异或操作的性质&quot;">​</a></h5><ul><li>任何数与0异或，结果是其本身：例如<code>n^0=n</code></li><li>任何数与自身异或，结果是0：例如<code>n^n=0</code></li><li>异或操作满足交换律和结合律：即<code>a^b=b^a，(a^b)^c=a^(b^c)</code></li></ul><p><a href="./../../../books/techAndCodes/大话计算机/门电路.html">相关门电路异或</a></p>`,8)]))}const _=e(l,[["render",p]]);export{h as __pageData,_ as default};
