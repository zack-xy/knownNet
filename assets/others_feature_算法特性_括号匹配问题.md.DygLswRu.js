import{_ as n}from"./chunks/MyCodes.Co6rOEO_.js";import{_ as l,c as t,o as i,aG as h,b as e,w as p,G as k,aH as r}from"./chunks/framework.CdnsPyyz.js";const E=JSON.parse('{"title":"括号匹配问题","description":"","frontmatter":{"title":"括号匹配问题","author":"Zack Zheng","date":"2025/04/30 14:03","categories":["何以编程","算法特性"],"tags":["算法"]},"headers":[],"relativePath":"others/feature/算法特性/括号匹配问题.md","filePath":"others/feature/算法特性/括号匹配问题.md","lastUpdated":1746756019000}'),D={name:"others/feature/算法特性/括号匹配问题.md"};function d(F,s,c,g,y,o){const a=n;return i(),t("div",null,[s[0]||(s[0]=h(`<p>如果是1种括号，可以简单的使用平衡因子来判断是否是有效括号组合。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">public</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;"> boolean</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> valid</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">char</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">[]</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> current</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">    int</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> balance </span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">    for</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">char</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> c </span><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">:</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> current</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">        if</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">c </span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">==</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">            ++</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">balance</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">        }</span><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> else</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">            --</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">balance</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">        }</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">        if</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">balance </span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">            return</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> false</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">        }</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">    return</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> balance </span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">==</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>而如果是2种以上的括号，需要使用栈和hash表来判断</p>`,3)),(i(),e(r,null,{default:p(()=>[k(a,{repo:"o-algorithm",path:"algorithm/栈常见题/括号问题/isValid.java",lang:"java"})]),_:1}))])}const b=l(D,[["render",d]]);export{E as __pageData,b as default};
