import{_ as s}from"./chunks/MyCodes.BSd1dXNO.js";import{_ as i}from"./chunks/theme.CaArFlcR.js";import{_,c as m,o,j as e,G as r,b as p,a as t,w as c,aH as d}from"./chunks/framework.CdnsPyyz.js";const B=JSON.parse('{"title":"排序算法总览","description":"","frontmatter":{"title":"排序算法总览","author":"Zack Zheng","date":"2025/05/22 13:36","categories":["何以编程"],"tags":["算法","排序"]},"headers":[],"relativePath":"others/feature/算法特性/排序算法总览.md","filePath":"others/feature/算法特性/排序算法总览.md","lastUpdated":1749437117000}'),u={name:"others/feature/算法特性/排序算法总览.md"};function h(g,a,f,x,k,b){const n=i,l=s;return o(),m("div",null,[a[0]||(a[0]=e("h5",{id:"评价维度",tabindex:"-1"},[t("评价维度 "),e("a",{class:"header-anchor",href:"#评价维度","aria-label":'Permalink to "评价维度"'},"​")],-1)),a[1]||(a[1]=e("ul",null,[e("li",null,"就地性 在原数组上直接操作实现排序，无需借助额外辅助数组"),e("li",null,"稳定性 在完成排序后，相等元素在数组中的相对顺序不发生变化"),e("li",null,"自适应性 能够利用输入数据已有的顺序信息来减少计算量，达到更优的时间效率"),e("li",null,[t("是否基于比较 基于比较的排序依赖比较运算符(<、=、>)来判断元素的相对顺序，理论最优时间复杂度为O(nlogn)"),e("br"),t(" 非比较排序不使用比较运算符，时间复杂度可以达O(n)，但通用性差")])],-1)),a[2]||(a[2]=e("h5",{id:"排序算法对比",tabindex:"-1"},[t("排序算法对比 "),e("a",{class:"header-anchor",href:"#排序算法对比","aria-label":'Permalink to "排序算法对比"'},"​")],-1)),r(n,{src:"https://gitee.com/zackzhengxy/picGallery/raw/main/imgs/sorting_algorithms_comparison.png"}),(o(),p(d,null,{default:c(()=>[r(l,{repo:"o-algorithm",path:"algorithm/排序算法/AllSort.java",lang:"java",lazy:""})]),_:1}))])}const N=_(u,[["render",h]]);export{B as __pageData,N as default};
