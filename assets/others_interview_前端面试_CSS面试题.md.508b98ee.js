import{_ as e,c as i,o as r,a as t}from"./app.8c5ae709.js";const _=JSON.parse('{"title":"CSS面试题","description":"","frontmatter":{"title":"CSS面试题","author":"Zack Zheng","date":"1999/01/01 00:00","categories":["面试题"],"tags":["CSS"]},"headers":[],"relativePath":"others/interview/前端面试/CSS面试题.md","lastUpdated":1709557953000}'),a={name:"others/interview/前端面试/CSS面试题.md"},d=t('<h4 id="伪元素和伪类" tabindex="-1">伪元素和伪类 <a class="header-anchor" href="#伪元素和伪类" aria-hidden="true">#</a></h4><p>(:)用于伪类(:before、:after、:first-line、:first-letter)<br> (::)用于伪元素（:hover、:active、:checked、:focus）</p><hr><h4 id="display-none和visibility-hidden的区别" tabindex="-1">display: none和visibility:hidden的区别 <a class="header-anchor" href="#display-none和visibility-hidden的区别" aria-hidden="true">#</a></h4><p><code>display: none： </code></p><ul><li>会从渲染树中消失，不占据空间。</li><li>因为dom消失了，意味着子节点无论如何修改，是么无法显示的。</li><li>修改display会导致重排</li><li>读屏器不可读<br><code>visibility:hidden </code></li><li>还在渲染树中，占据空间。</li><li>因为还在渲染树中，子节点还是可以显示的。</li><li>只会导致重绘</li><li>读屏器可读</li></ul><hr><h4 id="盒子模型" tabindex="-1">盒子模型 <a class="header-anchor" href="#盒子模型" aria-hidden="true">#</a></h4><ul><li><p>普通盒子模型 <code>box-sizing:content-box</code><br> width只包含内容宽度，不包含border和padding<br> offsetWidth = (width+padding+border),不算margin<br> width和height属性只会应用到内容区域</p></li><li><p>怪异盒模型<br><code>box-sizing: border-box</code><br> offsetWidth = width(padding和border都挤压到内容里面)<br> width包括内容区域、padding和border，不算margin</p></li></ul><hr><h4 id="什么是外边距塌陷" tabindex="-1">什么是外边距塌陷 <a class="header-anchor" href="#什么是外边距塌陷" aria-hidden="true">#</a></h4><p>查看站内文章</p><hr><h4 id="什么是bfc" tabindex="-1">什么是BFC <a class="header-anchor" href="#什么是bfc" aria-hidden="true">#</a></h4><p>Block Format Context:块级格式化上下文<br> 一块独立的渲染区域，内部元素的渲染不会影响边界以外的元素<br> 形成BFC条件：<br> float不设置为none<br> position是absolute或fixed<br> overflow不是visible<br> display是flex或者inline-block</p><h4 id="清除浮动有哪些方式" tabindex="-1">清除浮动有哪些方式 <a class="header-anchor" href="#清除浮动有哪些方式" aria-hidden="true">#</a></h4><p>浮动元素摆放规则：<br> 尽量一个挨着一个，靠左靠上，可能超出包含块，不能超过所在行的最高点，行内元素围绕着浮动元素摆放</p><p>问题：<br> 父元素的高度无法被撑开，与浮动元素同级的非浮动元素会紧随其后</p><p>清除浮动：</p><ul><li>父级div定义height</li><li>最后一个浮动元素后加div标签，添加样式clear:both (不推荐)</li><li>父级div定义zoom</li><li>父级添加overflow: hidden/auto (不推荐)</li><li>浮动元素的容器增加浮动(不推荐)</li><li>伪元素清除浮动，伪元素样式clear:both (推荐)</li><li>before和after双伪元素清除浮动</li></ul><hr><h4 id="client、offset和scroll" tabindex="-1">client、offset和scroll <a class="header-anchor" href="#client、offset和scroll" aria-hidden="true">#</a></h4><p>offsetParent是一个只读属性，返回一个最近的（包括层级），包含该元素的定位元素，如果没有定位元素，返回最近的table、td、th或body元素</p><p>clientWidth和clientHeight，可视区的宽/高度，不包含滚动条、不包含border<br> offsetWidth和offsetHeight,包含border</p><p>clientTop获取元素上边框宽度，不包括顶内外边距<br> clientLeft获取元素左边框宽度<br> offsetTop获取元素到有定位父元素顶部距离<br> offsetLeft获取元素到有定位父元素左侧距离</p><p>scrollWidth、scrollHeight确定元素内容的实际大小<br> scrollLeft、scrollTop可以确定滚动条的状态，可以可以设置滚动</p>',26),l=[d];function o(h,n,s,c,b,p){return r(),i("div",null,l)}const u=e(a,[["render",o]]);export{_ as __pageData,u as default};
