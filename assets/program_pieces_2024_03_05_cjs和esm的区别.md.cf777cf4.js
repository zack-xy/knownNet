import{_ as t,c as d,o as e,a as r}from"./app.75d19d50.js";const S=JSON.parse('{"title":"cjs和esm的区别","description":"","frontmatter":{"title":"cjs和esm的区别","author":"Zack Zheng","date":"2023/03/05 00:00","categories":["ES6"],"tags":["ES6"]},"headers":[],"relativePath":"program/pieces/2024/03/05/cjs和esm的区别.md","lastUpdated":1716900052000}'),s={name:"program/pieces/2024/03/05/cjs和esm的区别.md"},a=r("<table><thead><tr><th></th><th>CJS</th><th>ESM</th></tr></thead><tbody><tr><td>语法类型</td><td>动态</td><td>静态 ｜</td></tr><tr><td>关键声明</td><td>require</td><td>export与import</td></tr><tr><td>加载方式</td><td>运行时加载</td><td>编译时加载</td></tr><tr><td>加载行为</td><td>同步加载</td><td>异步加载</td></tr><tr><td>书写位置</td><td>任何位置</td><td>顶层位置</td></tr><tr><td>指针指向</td><td>this指向当前模块</td><td>this指向undefined</td></tr><tr><td>执行顺序</td><td>首次加载时加载模块，再次引用时读取缓存</td><td>引用时只生成只读引用，执行时才是正式取值</td></tr><tr><td>属性引用</td><td>基本类型属于复制不共享，引用类型属于浅拷贝且共享</td><td>所有类型属于动态只读引用</td></tr><tr><td>属性改动</td><td>工作空间可修改引用的值</td><td>工作空间不可修改引用的值，但可以通过引用的方法修改</td></tr></tbody></table><p>运行时加载：指整体加载模块生成一个对象，再从对象中获取所需的属性方法去加载。最大特性是全部加载，只有运行时才能得到该对象，无法在编译时做静态优化</p><p>编译时加载：指直接从模块中获取所需的属性方法去加载。最大特性是按需加载，在编译时就完成模块加载，效率比其他方案高，无法引用模块本身，但可以扩展JS高级语法（宏与类型校验）</p>",3),_=[a];function o(c,p,i,n,h,m){return e(),d("div",null,_)}const f=t(s,[["render",o]]);export{S as __pageData,f as default};
