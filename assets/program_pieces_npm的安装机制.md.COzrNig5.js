import{_ as a}from"./chunks/theme.CFf5wXVw.js";import{_ as n,c as o,o as t,G as c,aG as l}from"./chunks/framework.CdnsPyyz.js";const k=JSON.parse('{"title":"npm的安装机制","description":"","frontmatter":{"title":"npm的安装机制","author":"Zack Zheng","date":"2023/01/01 00:00","categories":["大海拾遗"],"tags":["JavaScript"]},"headers":[],"relativePath":"program/pieces/npm的安装机制.md","filePath":"program/pieces/npm的安装机制.md","lastUpdated":1741325738000}'),r={name:"program/pieces/npm的安装机制.md"};function i(m,e,d,s,h,_){const p=a;return t(),o("div",null,[c(p,{src:"https://gitee.com/zackzhengxy/picGallery/raw/main/imgs/npm的安装机制.svg"}),e[0]||(e[0]=l('<h5 id="npm缓存机制" tabindex="-1">npm缓存机制 <a class="header-anchor" href="#npm缓存机制" aria-label="Permalink to &quot;npm缓存机制&quot;">​</a></h5><p>查看npm缓存目录路径</p><p><code>npm config get cache</code></p><p>缓存存放在<code>_cacache</code>文件夹中<br> 可以使用如下命令清除这个文件夹中的内容</p><p><code>npm cache clean --force</code></p><p>_cacache文件夹中有3个目录</p><blockquote><p>content-v2 --- 二进制文件</p></blockquote><blockquote><p>index-v5 --- content-v2里文件索引</p></blockquote><blockquote><p>tmp ---</p></blockquote><ol><li>当npm install执行时，通过pacote把相应的包解压在对应的node_module下面</li><li>pacote依赖npm-registry-fetch来下载包，在给定的路径下根据IRTF RFC 7234生成缓存数据</li><li>在每次安装资源时，根据package-lock.json中存储的integrity、version、name信息生成一个唯一key</li><li>这个key会对应到index-v5下的缓存记录，发现有缓存资源，就会找到tar包的hash，再次通过pacote把对应的二进制文件解压到相应的项目node_modules下面</li></ol><hr><h4 id="如何高效率在本地验证包的可用性" tabindex="-1">如何高效率在本地验证包的可用性 <a class="header-anchor" href="#如何高效率在本地验证包的可用性" aria-label="Permalink to &quot;如何高效率在本地验证包的可用性&quot;">​</a></h4><p><code>npm link</code>用于在开发过程中将本地npm包链接到全局npm目录，从而可以在其他项目中使用这个本地包，而不需要发布到npm仓库。</p><h5 id="基本用法和步骤" tabindex="-1">基本用法和步骤 <a class="header-anchor" href="#基本用法和步骤" aria-label="Permalink to &quot;基本用法和步骤&quot;">​</a></h5><ol><li><p>在本地包目录中创建链接</p><p>首先，进入要链接的本地包的目录，运行以下命令</p><p><code>npm link</code></p><p>这个命令会在全局npm目录中创建一个符号链接，指向你当前的本地包</p></li><li><p>在项目中使用链接的包</p><p>进入希望使用这个本地包的项目目录，运行以下命令</p><p><code>npm link &lt;package-name&gt;</code></p><p><code>&lt;package-name&gt;</code>是你本地包的名称（通常在package.json文件中的name字段定义），这个命令会在项目的node_modules目录中创建一个符号链接。指向全局npm目录中的本地包</p></li><li><p>取消链接</p><p>如果你需要取消链接，可以按照以下步骤操作</p><ul><li><p>在项目目录中运行以下命令，取消项目中的链接</p><p><code>npm unlink &lt;package-name&gt;</code></p></li><li><p>在本地包目录中运行以下命令，取消全局链接</p><p><code>npm unlink</code></p></li></ul><p><a href="https://www.cnblogs.com/an-shiguang/p/18269056" target="_blank" rel="noreferrer">参考资料地址</a></p></li></ol><hr><h4 id="如何部署一个私有npm镜像" tabindex="-1">如何部署一个私有npm镜像 <a class="header-anchor" href="#如何部署一个私有npm镜像" aria-label="Permalink to &quot;如何部署一个私有npm镜像&quot;">​</a></h4><p>使用nexus、verdaccio、cnpm</p><hr><h4 id="npm配置优先级" tabindex="-1">npm配置优先级 <a class="header-anchor" href="#npm配置优先级" aria-label="Permalink to &quot;npm配置优先级&quot;">​</a></h4><p>优先级从左到右，依次降低</p><p>命令行设置npm配置 ---&gt; env环境变量设置npm配置 ---&gt; 项目级.npmrc ---&gt; 用户级.npmrc ---&gt; 全局级.npmrc ---&gt; npm内置.npmrc</p>',22))])}const b=n(r,[["render",i]]);export{k as __pageData,b as default};
