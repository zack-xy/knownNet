import{_ as i,c as a,o as n,aG as l}from"./chunks/framework.Nr4pRSPI.js";const F=JSON.parse('{"title":"什么是纯Pure ESM package","description":"","frontmatter":{"title":"什么是纯Pure ESM package","author":"Zack Zheng","date":"2023/07/21 00:00","categories":["JavaScript"],"tags":["ESM"]},"headers":[],"relativePath":"program/pieces/什么是纯Pure ESM package.md","filePath":"program/pieces/什么是纯Pure ESM package.md","lastUpdated":1741336632000}'),p={name:"program/pieces/什么是纯Pure ESM package.md"};function e(t,s,h,k,r,d){return n(),a("div",null,[...s[0]||(s[0]=[l(`<p>在玩项目的过程中，引入chalk发现报错了，看了一下它的库，发现自己的项目不是Pure ESM package</p><p>整理几个关于Pure ESM package的几个文章链接</p><p><a href="https://www.albertaz.com/blog/pure-esm-package" target="_blank" rel="noreferrer">介绍Pure ESM package和一些常见的坑</a></p><p><a href="https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c" target="_blank" rel="noreferrer">chalk作者关于Pure ESM package</a></p><h5 id="如何在纯esm项目中使用commonjs的包" tabindex="-1">如何在纯ESM项目中使用commonjs的包 <a class="header-anchor" href="#如何在纯esm项目中使用commonjs的包" aria-label="Permalink to &quot;如何在纯ESM项目中使用commonjs的包&quot;">​</a></h5><p>1、使用默认导入</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// 原来的命名导入方式（会报错）</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// import { sync } from &#39;fast-glob&#39;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// 修改为默认导入</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> fastGlob</span><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">fast-glob</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// 使用 sync 方法</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> result</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> fastGlob</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">sync</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">([</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">**/*.js</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">])</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">console</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">result</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>2、使用动态导入（适用于异步场景）</p><p>如果你的代码允许异步操作，可以使用动态导入 import() 来加载 fast-glob 模块。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">async</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;"> function</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> main</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">    const</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> fastGlob</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> await</span><span style="--shiki-light:#61AFEF;--shiki-dark:#89DDFF;"> import</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">fast-glob</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">    const</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> result</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> fastGlob</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">sync</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">([</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">**/*.js</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">])</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">    console</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">result</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">main</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>3、配置 TypeScript（如果是 TypeScript 项目）</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">    &quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#C792EA;">compilerOptions</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">        &quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">esModuleInterop</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> true</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">        &quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">allowSyntheticDefaultImports</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> true</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>esModuleInterop</code>：启用后，TypeScript 会生成一些额外的代码来支持 CommonJS 和 ESM 之间的互操作。<br><code>allowSyntheticDefaultImports</code>：允许从没有默认导出的模块中进行默认导入。</p><h5 id="纯esm项目下cjs的包配置项怎么修改" tabindex="-1">纯ESM项目下cjs的包配置项怎么修改 <a class="header-anchor" href="#纯esm项目下cjs的包配置项怎么修改" aria-label="Permalink to &quot;纯ESM项目下cjs的包配置项怎么修改&quot;">​</a></h5><p>最简单的解决方案。即使你的项目是 ESM，仍然可以在项目中保留部分文件为 CommonJS 格式。</p><p>比如将配置文件重命名为 .cz-config.cjs：</p><p>将 .cz-config.js 或 .cz-config.mjs 重命名为 .cz-config.cjs。</p><p>.cjs 扩展名会告诉 Node.js 这是一个 CommonJS 模块。</p>`,18)])])}const o=i(p,[["render",e]]);export{F as __pageData,o as default};
