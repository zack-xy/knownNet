import{_ as a,c as i,o as e,aG as n}from"./chunks/framework.DsljODgs.js";const c=JSON.parse('{"title":"如何提交PR到开源项目","description":"","frontmatter":{"title":"如何提交PR到开源项目","author":"Zack Zheng","date":"2025/07/17 10:36","categories":["大海拾遗"],"tags":["github"]},"headers":[],"relativePath":"program/pieces/如何提交PR到开源项目.md","filePath":"program/pieces/如何提交PR到开源项目.md","lastUpdated":1752720436000}'),t={name:"program/pieces/如何提交PR到开源项目.md"};function l(p,s,h,r,d,k){return e(),i("div",null,[...s[0]||(s[0]=[n(`<h5 id="_1-fork-项目仓库" tabindex="-1">1.Fork 项目仓库 <a class="header-anchor" href="#_1-fork-项目仓库" aria-label="Permalink to &quot;1.Fork 项目仓库&quot;">​</a></h5><p>访问目标开源项目的 GitHub/Gitee 页面，点击右上角的 ‌Fork‌ 按钮，将仓库复制到你的账户下‌</p><h5 id="_2-克隆仓库到本地" tabindex="-1">2.克隆仓库到本地 <a class="header-anchor" href="#_2-克隆仓库到本地" aria-label="Permalink to &quot;2.克隆仓库到本地&quot;">​</a></h5><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">git</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> clone</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> https://github.com/你的用户名/仓库名.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>进入本地仓库目录后，添加原仓库为上游远程分支：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">git</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> remote</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> add</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> upstream</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> https://github.com/原项目/仓库名.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>定期同步原仓库更新：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">git</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> fetch</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> upstream</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">git</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> merge</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> upstream/main</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h5 id="‌3-创建新分支" tabindex="-1">‌3. 创建新分支 <a class="header-anchor" href="#‌3-创建新分支" aria-label="Permalink to &quot;‌3. 创建新分支&quot;">​</a></h5><p>避免直接修改 main 分支，新建分支并切换：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">git</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> checkout</span><span style="--shiki-light:#D19A66;--shiki-dark:#C3E88D;"> -b</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> fix-bug</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="‌4-修改代码并提交" tabindex="-1">‌4. 修改代码并提交 <a class="header-anchor" href="#‌4-修改代码并提交" aria-label="Permalink to &quot;‌4. 修改代码并提交&quot;">​</a></h5><p>在本地完成代码修改后，提交到你的分支:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">git</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> add</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> .</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">git</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> commit</span><span style="--shiki-light:#D19A66;--shiki-dark:#C3E88D;"> -m</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">修复了XX问题</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">git</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> push</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> origin</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> fix-bug</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="‌5-发起-pull-request" tabindex="-1">‌5. 发起 Pull Request <a class="header-anchor" href="#‌5-发起-pull-request" aria-label="Permalink to &quot;‌5. 发起 Pull Request&quot;">​</a></h5><p>在你的 GitHub/Gitee 仓库页面，点击 ‌Pull Request‌ 按钮‌<br> 选择你的分支（如 fix-bug）与原仓库的 main 分支对比<br> 填写清晰的标题和描述（如问题背景、修改内容）<br> 点击 ‌Create Pull Request‌ 提交</p>`,16)])])}const u=a(t,[["render",l]]);export{c as __pageData,u as default};
