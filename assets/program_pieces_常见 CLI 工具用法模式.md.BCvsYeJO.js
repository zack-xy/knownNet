import{_ as a,c,o,aG as i}from"./chunks/framework.CdnsPyyz.js";const y=JSON.parse('{"title":"常见CLI工具用法模式","description":"","frontmatter":{"title":"常见CLI工具用法模式","author":"Zack Zheng","date":"2025/07/18 10:38","categories":["npm"],"tags":["npm","node"]},"headers":[],"relativePath":"program/pieces/常见 CLI 工具用法模式.md","filePath":"program/pieces/常见 CLI 工具用法模式.md","lastUpdated":1752817430000}'),l={name:"program/pieces/常见 CLI 工具用法模式.md"};function t(n,e,r,d,m,h){return o(),c("div",null,e[0]||(e[0]=[i('<h5 id="参数选项式-mycli-name-zack-env-prod" tabindex="-1">参数选项式：<code>mycli --name zack --env prod</code> <a class="header-anchor" href="#参数选项式-mycli-name-zack-env-prod" aria-label="Permalink to &quot;参数选项式：`mycli --name zack --env prod`&quot;">​</a></h5><h5 id="子命令式-mycli-init、mycli-build、mycli-deploy" tabindex="-1">子命令式：<code>mycli init</code>、<code>mycli build</code>、<code>mycli deploy</code> <a class="header-anchor" href="#子命令式-mycli-init、mycli-build、mycli-deploy" aria-label="Permalink to &quot;子命令式：`mycli init`、`mycli build`、`mycli deploy`&quot;">​</a></h5><h5 id="管道式输入-stdin-echo-hello-mycli" tabindex="-1">管道式输入（stdin）：<code>echo &quot;hello&quot; | mycli</code> <a class="header-anchor" href="#管道式输入-stdin-echo-hello-mycli" aria-label="Permalink to &quot;管道式输入（stdin）：`echo &quot;hello&quot; | mycli`&quot;">​</a></h5><h5 id="交互式-prompt-mycli-启动后引导用户输入" tabindex="-1">交互式（prompt）：mycli 启动后引导用户输入 <a class="header-anchor" href="#交互式-prompt-mycli-启动后引导用户输入" aria-label="Permalink to &quot;交互式（prompt）：mycli 启动后引导用户输入&quot;">​</a></h5><p>比如说：<code>npx create-react-app</code></p><h5 id="文件参数式-mycli-config-json" tabindex="-1">文件参数式：<code>mycli ./config.json</code> <a class="header-anchor" href="#文件参数式-mycli-config-json" aria-label="Permalink to &quot;文件参数式：`mycli ./config.json`&quot;">​</a></h5><h5 id="多参数式-mycli-name1-name2-name3" tabindex="-1">多参数式：<code>mycli name1 name2 name3</code> <a class="header-anchor" href="#多参数式-mycli-name1-name2-name3" aria-label="Permalink to &quot;多参数式：`mycli name1 name2 name3`&quot;">​</a></h5><h5 id="环境变量控制-env-prod-mycli" tabindex="-1">环境变量控制：<code>ENV=prod mycli</code> <a class="header-anchor" href="#环境变量控制-env-prod-mycli" aria-label="Permalink to &quot;环境变量控制：`ENV=prod mycli`&quot;">​</a></h5><h5 id="组合式参数-mycli-font-standard-align-center" tabindex="-1">组合式参数：<code>mycli --font=Standard --align=center</code> <a class="header-anchor" href="#组合式参数-mycli-font-standard-align-center" aria-label="Permalink to &quot;组合式参数：`mycli --font=Standard --align=center`&quot;">​</a></h5><h5 id="调用系统命令-mycli-exec-ls-la" tabindex="-1">调用系统命令：<code>mycli exec &quot;ls -la&quot;</code> <a class="header-anchor" href="#调用系统命令-mycli-exec-ls-la" aria-label="Permalink to &quot;调用系统命令：`mycli exec &quot;ls -la&quot;`&quot;">​</a></h5><h5 id="配置文件式-zxyrc-zxy-config-js" tabindex="-1">配置文件式：<code>.zxyrc, zxy.config.js</code> <a class="header-anchor" href="#配置文件式-zxyrc-zxy-config-js" aria-label="Permalink to &quot;配置文件式：`.zxyrc, zxy.config.js`&quot;">​</a></h5>',11)]))}const p=a(l,[["render",t]]);export{y as __pageData,p as default};
