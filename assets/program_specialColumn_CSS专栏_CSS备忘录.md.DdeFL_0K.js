import{_ as t,c as d,o,aG as i}from"./chunks/framework.CAL16D-w.js";const b=JSON.parse('{"title":"CSS备忘录","description":"","frontmatter":{"title":"CSS备忘录","author":"Zack Zheng","date":"2025/06/27 11:23","categories":["CSS专栏"],"tags":["CSS"]},"headers":[],"relativePath":"program/specialColumn/CSS专栏/CSS备忘录.md","filePath":"program/specialColumn/CSS专栏/CSS备忘录.md","lastUpdated":1751276078000}'),c={name:"program/specialColumn/CSS专栏/CSS备忘录.md"};function a(n,e,r,l,s,h){return o(),d("div",null,[...e[0]||(e[0]=[i('<h4 id="逻辑坐标系和物理坐标系" tabindex="-1">逻辑坐标系和物理坐标系 <a class="header-anchor" href="#逻辑坐标系和物理坐标系" aria-label="Permalink to &quot;逻辑坐标系和物理坐标系&quot;">​</a></h4><p>物理坐标系：x轴从屏幕左上角开始向右延伸，y轴从屏幕左上角开始向下延伸。<br> 逻辑坐标系：Inline轴（内联轴）就是文字书写方向、Block轴（块轴）就是流方向，如果说文字书写方向<code>writing-mod</code>变了，二者会互相变换</p><p>根据逻辑属性，就有一些新的定义容器大小的属性，举两个例子，不一一例举：<br><code>block-size</code>块大小，书写从左到右，Block轴(块轴)从上到下的话(下面类似，不重复写了)，那么<code>block-size</code>就是定义高度的，等同于height <code>inline-size</code>内联大小，如上条件，<code>inline-size</code>就是内联轴上定义大小的，就等同于width</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ac2e7f9fb85644bba2eb64740984ea60~tplv-k3u1fbpfcp-zoom-1.image" alt="img" loading="lazy"></p><hr><h4 id="box-sizing" tabindex="-1">box-sizing <a class="header-anchor" href="#box-sizing" aria-label="Permalink to &quot;box-sizing&quot;">​</a></h4><p><code>border-box</code>和<code>content-box</code>区别就是，<code>border-box</code>是算border和padding的，也就是宽度300，是包含boder和padding的， 反之<code>content-box</code>就只是内容宽300，额外再算上boder和padding，实际宽度是超过300的</p><hr><h4 id="尺寸属性" tabindex="-1">尺寸属性 <a class="header-anchor" href="#尺寸属性" aria-label="Permalink to &quot;尺寸属性&quot;">​</a></h4><table tabindex="0"><thead><tr><th><strong>物理属性</strong></th><th style="text-align:right;"><strong>逻辑属性（horizontal-tab）</strong></th><th><strong>逻辑属性（vertical-lr）</strong></th><th><strong>逻辑属性（vertical-rl）</strong></th></tr></thead><tbody><tr><td><code>width</code></td><td style="text-align:right;"><code>inline-size</code></td><td><code>block-size</code></td><td><code>block-size</code></td></tr><tr><td><code>height</code></td><td style="text-align:right;"><code>block-size</code></td><td><code>inline-size</code></td><td><code>inline-size</code></td></tr><tr><td><code>min-width</code></td><td style="text-align:right;"><code>min-inline-size</code></td><td><code>min-block-size</code></td><td><code>min-block-size</code></td></tr><tr><td><code>min-height</code></td><td style="text-align:right;"><code>min-block-size</code></td><td><code>min-inline-size</code></td><td><code>min-inline-size</code></td></tr><tr><td><code>max-width</code></td><td style="text-align:right;"><code>max-inline-size</code></td><td><code>max-block-size</code></td><td><code>max-block-size</code></td></tr><tr><td><code>max-height</code></td><td style="text-align:right;"><code>max-block-size</code></td><td><code>max-inline-size</code></td><td><code>max-inline-size</code></td></tr></tbody></table><hr>',11)])])}const m=t(c,[["render",a]]);export{b as __pageData,m as default};
