import{_ as t,c as n,b as a,f as c,a as o,o as l,S as r}from"./app.90d65bae.js";const F=JSON.parse('{"title":"CSS属性之flex属性","description":"","frontmatter":{"title":"CSS属性之flex属性","author":"Zack Zheng","date":"2022/11/09 00:00","categories":["CSS专栏"],"tags":["CSS"]},"headers":[],"relativePath":"program/specialColumn/CSS专栏/CSS属性之flex属性.md","lastUpdated":1710507273000}'),i={name:"program/specialColumn/CSS专栏/CSS属性之flex属性.md"},s=c("p",null,"介绍css中的flex",-1),p=o('<p>上面漏了一个容器属性：gap：设置行与行，列与列之间的距离</p><p>属性大致可以分为：空间分配属性和对齐属性</p><p>空间分配属性：<br> justify-content: 沿Flex容器的主轴分配Flex容器的剩余空间<br> align-content:沿Flex容器的侧轴分配Flex容器的剩余空间<br> place-content： 是justify-content和align-content的简写</p><p>对齐属性：<br> align-self: 沿Flex容器的侧轴对齐单个Flex项目<br> align-item: 将所有flex项目作为一个组，沿Flex容器侧轴对齐</p><p>justify-开头的属性，用于Flex容器主轴方向<br> align-开头的属性，用于Flex容器侧轴的方向<br> -content结尾的属性，用于空间分配</p><h4 id="justify-content属性的值" tabindex="-1">justify-content属性的值 <a class="header-anchor" href="#justify-content属性的值" aria-hidden="true">#</a></h4><h5 id="默认情况下-无justify-content或者值为flex-start" tabindex="-1">默认情况下(无justify-content或者值为flex-start) <a class="header-anchor" href="#默认情况下-无justify-content或者值为flex-start" aria-hidden="true">#</a></h5><p>第一个Flex项目位于主轴起始点对齐，紧挨着向后排列，剩余空间在最后<br><code>|[][][]剩余空间|</code><br> ⚠️如果没有剩余空间：Flex项目会在终点溢出</p><p><code>justify-content: flex-end</code>: Flex项目终点与主轴终点对齐，剩余空间在前方<br><code>|剩余空间[][][]|</code><br> ⚠️如果没有剩余空间：Flex项目会在起点溢出</p><p><code>justify-content: center</code>: 剩余空间均分在两侧，Flex项目在中间<br><code>|剩余空间A[][][]剩余空间A|</code><br> ⚠️如果没有剩余空间：Flex两端溢出</p><p><code>justify-content: space-around</code>: 第一个和最后一个Flex项目距离主轴距离等于其他项目间距的1/2 <code>|间距A[]间距B[]间距B[]间距A|</code>：间距A = 1/2 * 间距B<br> ⚠️如果没有剩余空间：和center相同</p><p><code>justify-content: space-between</code>: 第一个Flex项目与主轴起始点对齐，最后一个与主轴终点对齐，其他项目间距相等<br><code>|[]间距A[]间距A[]间距A[]|</code><br> ⚠️如果没有剩余空间：和flex-start相同</p><p><code>justify-content: space-evenly</code>：所有项目间距相同<br><code>|间距A[]间距A[]间距A[]间距A|</code><br> ⚠️如果没有剩余空间：和center相同</p><h4 id="align-content" tabindex="-1">align-content <a class="header-anchor" href="#align-content" aria-hidden="true">#</a></h4><p>分配侧轴的空间,属性的值和justify-content相同</p><p>如果Flex项目没有显示的设置height或block-size,默认会侧轴拉伸Flex项目</p><p>(Flex项目换行且高度固定的时候，侧轴可能才会有空余空间供分配，这时align-content才有效)</p><p>🔆justify-content和align-content可以合并为：place-content</p><h4 id="侧轴对齐flex项目" tabindex="-1">侧轴对齐Flex项目 <a class="header-anchor" href="#侧轴对齐flex项目" aria-hidden="true">#</a></h4><p>Flex项目❗不换行❗，Flex项目在侧轴上的对齐方式就不能使用align-content了</p><p>align-items:控制Flex项目所在行在侧轴上的对齐方式<br> align-self:用于控制单个Flex项目在侧轴的对齐方式</p><p>📢：如果在Flex容器上同时设置align-content和align-items时，如果align-content是stretch(默认值时)，浏览器会以align-items为主忽略align-content，如果align-content是非默认值strctch,则反之。</p><h4 id="控制主轴单个项目" tabindex="-1">控制主轴单个项目 <a class="header-anchor" href="#控制主轴单个项目" aria-hidden="true">#</a></h4><p>margin: auto</p>',24);function d(x,f,h,_,u,g){const e=r;return l(),n("div",null,[s,a(e,{src:"https://s11.ax1x.com/2024/02/24/pFU7NJe.png"}),p])}const S=t(i,[["render",d]]);export{F as __pageData,S as default};
