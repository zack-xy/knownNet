import{_ as e,c as a,o,a as i}from"./app.2122793d.js";const S=JSON.parse('{"title":"浏览器存储","description":"","frontmatter":{"title":"浏览器存储","author":"Zack Zheng","date":"2022/02/16 09:51","categories":["JavaScript专栏"],"tags":["JavaScript"]},"headers":[{"level":3,"title":"cookie","slug":"cookie","link":"#cookie","children":[]},{"level":3,"title":"Web Storage","slug":"web-storage","link":"#web-storage","children":[]},{"level":3,"title":"IndexDB","slug":"indexdb","link":"#indexdb","children":[]}],"relativePath":"program/specialColumn/JavaScript专栏/浏览器存储.md","lastUpdated":1694091456000}'),t={name:"program/specialColumn/JavaScript专栏/浏览器存储.md"},r=i('<h3 id="cookie" tabindex="-1">cookie <a class="header-anchor" href="#cookie" aria-hidden="true">#</a></h3><blockquote><p>钱塘江上潮信来，今日方知我是我</p></blockquote><p>http协议是无状态协议，请求一去一回就结束了，服务器没有客户端的信息，下一次请求，如何让服务器知道是我呢？</p><p>cookie原始是用来维持状态的，是一个文本，附着在请求上，携带用户信息，服务器检查cookie的时候就知道是我了</p><h4 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-hidden="true">#</a></h4><ol><li>大小只有4k</li><li>键值对形式</li><li>紧跟域名（可以设置域名domain），同域名下的请求都会携带cookie (为什么业务服务域名和CDN服务域名不同，因为CDN是静态资源，不必携带cookie，不同的域名，就可以不携带cookie了，节省资源)</li></ol><h3 id="web-storage" tabindex="-1">Web Storage <a class="header-anchor" href="#web-storage" aria-hidden="true">#</a></h3><p>cookie的特点也是缺点，且不是专门为了存储搞的。Web Storage是专门为了存储搞的</p><h4 id="local-storage和session-storage" tabindex="-1">Local Storage和Session Storage <a class="header-anchor" href="#local-storage和session-storage" aria-hidden="true">#</a></h4><p>Local Storage是持久化本地存储，永远有效，除非手动删除 Session Storage是会话级别的，页面关闭，存储释放 Local Storage、Session Storage、cookie都遵循同源策略，Session Storage有不同，即使同源，两个窗口的不共享（从一个窗口打开，会带上上一个窗口的Session Storage，但是不共享）</p><h4 id="特点-1" tabindex="-1">特点 <a class="header-anchor" href="#特点-1" aria-hidden="true">#</a></h4><ol><li>大（5-10M）</li><li>键值对形式</li><li>不与服务端发生通信</li></ol><p>（为了性能优化，有时会将base64或者小js、css存储在Web Storage）</p><h3 id="indexdb" tabindex="-1">IndexDB <a class="header-anchor" href="#indexdb" aria-hidden="true">#</a></h3><p>IndexDB是一个运行在浏览器上的非关系型数据库（牛逼plus了），大于250M，可以存储字符串和二进制数据</p>',15),s=[r];function l(c,d,n,h,p,_){return o(),a("div",null,s)}const k=e(t,[["render",l]]);export{S as __pageData,k as default};
