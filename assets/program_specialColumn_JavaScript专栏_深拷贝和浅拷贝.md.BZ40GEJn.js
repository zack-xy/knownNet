import{_ as c}from"./chunks/MyCodes.DzQtyZeA.js";import{_ as d,c as u,o as l,aG as s,b as i,j as e,w as r,G as o,aH as n,a as p}from"./chunks/framework.DGtm8y85.js";import"./chunks/theme.C0jEMQeN.js";const q=JSON.parse('{"title":"深拷贝和浅拷贝","description":"","frontmatter":{"title":"深拷贝和浅拷贝","author":"Zack Zheng","date":"2022/02/16 09:51","categories":["JavaScript专栏"],"tags":["JavaScript","Remote Code"]},"headers":[],"relativePath":"program/specialColumn/JavaScript专栏/深拷贝和浅拷贝.md","filePath":"program/specialColumn/JavaScript专栏/深拷贝和浅拷贝.md","lastUpdated":1755154786000}'),h={name:"program/specialColumn/JavaScript专栏/深拷贝和浅拷贝.md"};function m(_,a,b,f,g,j){const t=c;return l(),u("div",null,[a[0]||(a[0]=s('<h3 id="浅拷贝" tabindex="-1">浅拷贝 <a class="header-anchor" href="#浅拷贝" aria-label="Permalink to &quot;浅拷贝&quot;">​</a></h3><h4 id="object-assign" tabindex="-1">object.assign <a class="header-anchor" href="#object-assign" aria-label="Permalink to &quot;object.assign&quot;">​</a></h4><ul><li><p>浅拷贝</p></li><li><p>不会拷贝对象的继承属性</p></li><li><p>不会拷贝对象的不可枚举属性</p></li><li><p>可以拷贝Symbol属性</p></li></ul><h4 id="扩展运算符" tabindex="-1">扩展运算符 <a class="header-anchor" href="#扩展运算符" aria-label="Permalink to &quot;扩展运算符&quot;">​</a></h4><ul><li>浅拷贝</li></ul><h4 id="concat拷贝数组" tabindex="-1">concat拷贝数组 <a class="header-anchor" href="#concat拷贝数组" aria-label="Permalink to &quot;concat拷贝数组&quot;">​</a></h4><ul><li>浅拷贝</li><li>只能拷贝数组</li></ul><h4 id="slice拷贝数组" tabindex="-1">slice拷贝数组 <a class="header-anchor" href="#slice拷贝数组" aria-label="Permalink to &quot;slice拷贝数组&quot;">​</a></h4><ul><li>浅拷贝</li><li>只能拷贝数组</li></ul><h4 id="手写一个浅拷贝" tabindex="-1">手写一个浅拷贝 <a class="header-anchor" href="#手写一个浅拷贝" aria-label="Permalink to &quot;手写一个浅拷贝&quot;">​</a></h4>',10)),(l(),i(n,null,{default:r(()=>[o(t,{title:"手写浅拷贝演示代码",repo:"o-bricks",path:"jsFragment/implement/DeepClone/shallowClone.js",lang:"js",lazy:""})]),_:1})),a[1]||(a[1]=s('<h3 id="深拷贝" tabindex="-1">深拷贝 <a class="header-anchor" href="#深拷贝" aria-label="Permalink to &quot;深拷贝&quot;">​</a></h3><h4 id="json-stringfy" tabindex="-1">JSON.stringfy <a class="header-anchor" href="#json-stringfy" aria-label="Permalink to &quot;JSON.stringfy&quot;">​</a></h4><ul><li><p>拷贝的对象的值中如果有函数、undefined、symbol 这几种类型，经过 JSON.stringify 序列化之后的字符串中这个键值对会消失；</p></li><li><p>拷贝 Date 引用类型会变成字符串；</p></li><li><p>无法拷贝不可枚举的属性；</p></li><li><p>无法拷贝对象的原型链；</p></li><li><p>拷贝 RegExp 引用类型会变成空对象；</p></li><li><p>对象中含有 NaN、Infinity 以及 -Infinity，JSON 序列化的结果会变成 null；</p></li><li><p>无法拷贝对象的循环应用，即对象成环 (obj[key] = obj)。</p></li></ul><h4 id="深拷贝基础手写递归实现" tabindex="-1">深拷贝基础手写递归实现 <a class="header-anchor" href="#深拷贝基础手写递归实现" aria-label="Permalink to &quot;深拷贝基础手写递归实现&quot;">​</a></h4>',4)),(l(),i(n,null,{default:r(()=>[o(t,{title:"深拷贝基础手写递归实现演示代码",repo:"o-bricks",path:"jsFragment/implement/DeepClone/deepClone-simple.js",lang:"js",lazy:""})]),_:1})),a[2]||(a[2]=e("ul",null,[e("li",null,"不能拷贝不可枚举属性和Symbol类型"),e("li",null,"只针对普通引用类型做递归复制 （数组，正则，日期等 不能正确拷贝）"),e("li",null,"无法拷贝对象的循环应用，即对象成环 (obj[key] = obj)")],-1)),a[3]||(a[3]=e("h4",{id:"深拷贝升级手写递归实现",tabindex:"-1"},[p("深拷贝升级手写递归实现 "),e("a",{class:"header-anchor",href:"#深拷贝升级手写递归实现","aria-label":'Permalink to "深拷贝升级手写递归实现"'},"​")],-1)),(l(),i(n,null,{default:r(()=>[o(t,{title:"深拷贝升级手写递归实现演示代码",repo:"o-bricks",path:"jsFragment/implement/DeepClone/other2-version.js",lang:"js",lazy:""})]),_:1})),a[4]||(a[4]=e("p",null,"利用Object的getOwnPropertyDescriptors方法可以获得对象的所有属性，以及对应的特性，顺便结合Object的create方法创建一个新对象，并继承传入对象的原型链 。利用WeakMap类型作为Hash表，因为WeakMap是弱引用类型，可以有效防止内存泄漏，作为检测循环引用很有帮助，如果存在循环，则引用直接返回WeakMap存储的值",-1)),a[5]||(a[5]=e("h4",{id:"其他手写深拷贝",tabindex:"-1"},[p("其他手写深拷贝 "),e("a",{class:"header-anchor",href:"#其他手写深拷贝","aria-label":'Permalink to "其他手写深拷贝"'},"​")],-1)),(l(),i(n,null,{default:r(()=>[o(t,{title:"简单版本",repo:"o-bricks",path:"jsFragment/implement/DeepClone/common-version.js",lang:"js",lazy:""})]),_:1})),(l(),i(n,null,{default:r(()=>[o(t,{title:"简单版本2",repo:"o-bricks",path:"jsFragment/implement/DeepClone/other-version.js",lang:"js",lazy:""})]),_:1})),(l(),i(n,null,{default:r(()=>[o(t,{title:"手写underscore版本",repo:"o-bricks",path:"jsFragment/underscore/_.js",lang:"js",lazy:""})]),_:1}))])}const P=d(h,[["render",m]]);export{q as __pageData,P as default};
