import{_ as h}from"./chunks/MyCodes.ClAAuAgJ.js";import{_ as c,c as u,o as r,aG as s,b as o,j as e,w as t,G as i,aH as n,a as d}from"./chunks/framework.CdnsPyyz.js";import"./chunks/theme.CDekc-Oj.js";const P=JSON.parse('{"title":"Java基础","description":"","frontmatter":{"title":"Java基础","author":"Zack Zheng","date":"2022/02/16 09:51","categories":["Java专栏"],"tags":["Java"]},"headers":[],"relativePath":"program/specialColumn/Java专栏/Java基础.md","filePath":"program/specialColumn/Java专栏/Java基础.md","lastUpdated":1749459491000}'),b={name:"program/specialColumn/Java专栏/Java基础.md"};function m(p,a,f,q,v,k){const l=h;return r(),u("div",null,[a[0]||(a[0]=s('<h4 id="object通用方法" tabindex="-1">Object通用方法 <a class="header-anchor" href="#object通用方法" aria-label="Permalink to &quot;Object通用方法&quot;">​</a></h4><h5 id="equals和hashcode" tabindex="-1">equals和hashCode <a class="header-anchor" href="#equals和hashcode" aria-label="Permalink to &quot;equals和hashCode&quot;">​</a></h5><h5 id="tostring示例" tabindex="-1">toString示例 <a class="header-anchor" href="#tostring示例" aria-label="Permalink to &quot;toString示例&quot;">​</a></h5><h5 id="clone示例" tabindex="-1">clone示例 <a class="header-anchor" href="#clone示例" aria-label="Permalink to &quot;clone示例&quot;">​</a></h5><h5 id="浅拷贝" tabindex="-1">浅拷贝 <a class="header-anchor" href="#浅拷贝" aria-label="Permalink to &quot;浅拷贝&quot;">​</a></h5><h5 id="深拷贝" tabindex="-1">深拷贝 <a class="header-anchor" href="#深拷贝" aria-label="Permalink to &quot;深拷贝&quot;">​</a></h5><h5 id="clone-替代方案" tabindex="-1">clone()替代方案 <a class="header-anchor" href="#clone-替代方案" aria-label="Permalink to &quot;clone()替代方案&quot;">​</a></h5><h5 id="代码示例" tabindex="-1">代码示例 <a class="header-anchor" href="#代码示例" aria-label="Permalink to &quot;代码示例&quot;">​</a></h5>',8)),(r(),o(n,null,{default:t(()=>[i(l,{repo:"o-bricks",path:"demoCodes/javaCodes/practice/src/example/ObjectCommonMethod.java",lang:"java",lazy:""})]),_:1})),a[1]||(a[1]=e("hr",null,null,-1)),a[2]||(a[2]=e("h4",{id:"继承的演示",tabindex:"-1"},[d("继承的演示 "),e("a",{class:"header-anchor",href:"#继承的演示","aria-label":'Permalink to "继承的演示"'},"​")],-1)),a[3]||(a[3]=e("h5",{id:"代码示例-1",tabindex:"-1"},[d("代码示例 "),e("a",{class:"header-anchor",href:"#代码示例-1","aria-label":'Permalink to "代码示例"'},"​")],-1)),(r(),o(n,null,{default:t(()=>[i(l,{repo:"o-bricks",path:"demoCodes/javaCodes/practice/src/example/annotations/userDefined.java",lang:"java",lazy:""})]),_:1})),a[4]||(a[4]=e("hr",null,null,-1)),a[5]||(a[5]=e("h4",{id:"类实现接口的演示",tabindex:"-1"},[d("类实现接口的演示 "),e("a",{class:"header-anchor",href:"#类实现接口的演示","aria-label":'Permalink to "类实现接口的演示"'},"​")],-1)),a[6]||(a[6]=e("h5",{id:"代码示例-2",tabindex:"-1"},[d("代码示例 "),e("a",{class:"header-anchor",href:"#代码示例-2","aria-label":'Permalink to "代码示例"'},"​")],-1)),(r(),o(n,null,{default:t(()=>[i(l,{repo:"o-bricks",path:"demoCodes/javaCodes/practice/src/example/InterfaceImplementExample.java",lang:"java",lazy:""})]),_:1})),a[7]||(a[7]=e("hr",null,null,-1)),a[8]||(a[8]=e("h4",{id:"单例模式演示",tabindex:"-1"},[d("单例模式演示 "),e("a",{class:"header-anchor",href:"#单例模式演示","aria-label":'Permalink to "单例模式演示"'},"​")],-1)),a[9]||(a[9]=e("h5",{id:"代码示例-3",tabindex:"-1"},[d("代码示例 "),e("a",{class:"header-anchor",href:"#代码示例-3","aria-label":'Permalink to "代码示例"'},"​")],-1)),(r(),o(n,null,{default:t(()=>[i(l,{repo:"o-bricks",path:"demoCodes/javaCodes/practice/src/example/singleCase.java",lang:"java",lazy:""})]),_:1})),a[10]||(a[10]=s('<hr><h4 id="泛型" tabindex="-1">泛型 <a class="header-anchor" href="#泛型" aria-label="Permalink to &quot;泛型&quot;">​</a></h4><h5 id="泛型的上限和下限" tabindex="-1">泛型的上限和下限 <a class="header-anchor" href="#泛型的上限和下限" aria-label="Permalink to &quot;泛型的上限和下限&quot;">​</a></h5><h5 id="多个泛型限制" tabindex="-1">多个泛型限制 <a class="header-anchor" href="#多个泛型限制" aria-label="Permalink to &quot;多个泛型限制&quot;">​</a></h5><h5 id="泛型方法、泛型类" tabindex="-1">泛型方法、泛型类 <a class="header-anchor" href="#泛型方法、泛型类" aria-label="Permalink to &quot;泛型方法、泛型类&quot;">​</a></h5><h5 id="泛型数组" tabindex="-1">泛型数组 <a class="header-anchor" href="#泛型数组" aria-label="Permalink to &quot;泛型数组&quot;">​</a></h5><h5 id="代码示例-4" tabindex="-1">代码示例 <a class="header-anchor" href="#代码示例-4" aria-label="Permalink to &quot;代码示例&quot;">​</a></h5>',7)),(r(),o(n,null,{default:t(()=>[i(l,{repo:"o-bricks",path:"demoCodes/javaCodes/practice/src/example/generics/GenericsRange.java",lang:"java",lazy:""})]),_:1})),(r(),o(n,null,{default:t(()=>[i(l,{repo:"o-bricks",path:"demoCodes/javaCodes/practice/src/example/generics/GenericsDemo.java",lang:"java",lazy:""})]),_:1})),(r(),o(n,null,{default:t(()=>[i(l,{repo:"o-bricks",path:"demoCodes/javaCodes/practice/src/example/generics/GenericsArray.java",lang:"java",lazy:""})]),_:1})),a[11]||(a[11]=s('<hr><h4 id="注解" tabindex="-1">注解 <a class="header-anchor" href="#注解" aria-label="Permalink to &quot;注解&quot;">​</a></h4><p>作用：</p><ul><li>生成文档 (生成javadoc文档)</li><li>编译检查</li><li>编译时动态处理 （编译时通过代码里标识的元数据动态处理，例如动态生成代码）</li><li>运行时动态处理 （运行时通过代码里标识的元数据动态处理，例如使用反射注入实例）</li></ul><p>分类：</p><ul><li>Java自带的标准注解：包括<code>@override</code>,<code>@Deprecated</code>,<code>@SuppressWarnings</code></li><li>元注解：用于定义注解的注解<br> JDK1.5提供4个:<code>@Target</code>、<code>@Retention</code>、<code>@Documented</code>、<code>@Inherited</code><br> JDK1.8提供2个：<code>@Repeatable</code>、<code>@Native</code></li><li>自定义注解：自定义注解，可用元注解对自定义注解进行注解</li></ul><h5 id="java自带的标注注解-内置注解" tabindex="-1">Java自带的标注注解（内置注解） <a class="header-anchor" href="#java自带的标注注解-内置注解" aria-label="Permalink to &quot;Java自带的标注注解（内置注解）&quot;">​</a></h5><h5 id="元注解-jdk1-5-4个-jdk1-8-2个" tabindex="-1">元注解（JDK1.5/4个，JDK1.8/2个） <a class="header-anchor" href="#元注解-jdk1-5-4个-jdk1-8-2个" aria-label="Permalink to &quot;元注解（JDK1.5/4个，JDK1.8/2个）&quot;">​</a></h5><h5 id="注解与反射-没有演示代码-有一揽子api-不一一列了" tabindex="-1">注解与反射 （没有演示代码，有一揽子API，不一一列了） <a class="header-anchor" href="#注解与反射-没有演示代码-有一揽子api-不一一列了" aria-label="Permalink to &quot;注解与反射 （没有演示代码，有一揽子API，不一一列了）&quot;">​</a></h5><h5 id="自定义注解" tabindex="-1">自定义注解 <a class="header-anchor" href="#自定义注解" aria-label="Permalink to &quot;自定义注解&quot;">​</a></h5><h5 id="jsr308-类型注解" tabindex="-1">JSR308（类型注解） <a class="header-anchor" href="#jsr308-类型注解" aria-label="Permalink to &quot;JSR308（类型注解）&quot;">​</a></h5><p>扩展了注解使用范围，可以应用于类型本身(@NonNull、@Nullable、@Immutable、@ThreadSafe、@GuardedBy)</p><h5 id="注解的本质和原理csdn" tabindex="-1"><a href="https://blog.csdn.net/qq_20009015/article/details/106038023" target="_blank" rel="noreferrer">注解的本质和原理CSDN</a> <a class="header-anchor" href="#注解的本质和原理csdn" aria-label="Permalink to &quot;[注解的本质和原理CSDN](https://blog.csdn.net/qq_20009015/article/details/106038023)&quot;">​</a></h5><h5 id="代码示例-5" tabindex="-1">代码示例 <a class="header-anchor" href="#代码示例-5" aria-label="Permalink to &quot;代码示例&quot;">​</a></h5>',14)),(r(),o(n,null,{default:t(()=>[i(l,{repo:"o-bricks",path:"demoCodes/javaCodes/practice/src/example/annotations/demo.java",lang:"java",lazy:""})]),_:1})),(r(),o(n,null,{default:t(()=>[i(l,{repo:"o-bricks",path:"demoCodes/javaCodes/practice/src/example/annotations/metaAnnotation.java",lang:"java",lazy:""})]),_:1})),(r(),o(n,null,{default:t(()=>[i(l,{repo:"o-bricks",path:"demoCodes/javaCodes/practice/src/example/annotations/userDefined.java",lang:"java",lazy:""})]),_:1}))])}const C=c(b,[["render",m]]);export{P as __pageData,C as default};
