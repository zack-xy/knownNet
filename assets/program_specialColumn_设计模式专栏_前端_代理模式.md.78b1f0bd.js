import{_ as s,c as n,o as a,a as l}from"./app.35c0ea80.js";const D=JSON.parse('{"title":"【前端】代理模式","description":"","frontmatter":{"title":"【前端】代理模式","author":"Zack Zheng","date":"2022/02/16 09:51","categories":["JavaScript专栏"],"tags":["设计模式"]},"headers":[{"level":2,"title":"针对一个对象，设置代理控制这个对象的访问，用户需要通过代理访问对象","slug":"针对一个对象-设置代理控制这个对象的访问-用户需要通过代理访问对象","link":"#针对一个对象-设置代理控制这个对象的访问-用户需要通过代理访问对象","children":[]},{"level":2,"title":"代码演示","slug":"代码演示","link":"#代码演示","children":[]},{"level":2,"title":"场景","slug":"场景","link":"#场景","children":[{"level":3,"title":"DOM事件代理（委托）","slug":"dom事件代理-委托","link":"#dom事件代理-委托","children":[]},{"level":3,"title":"webpack devserver proxy 正向（客户端）代理","slug":"webpack-devserver-proxy-正向-客户端-代理","link":"#webpack-devserver-proxy-正向-客户端-代理","children":[]},{"level":3,"title":"nginx 反向（服务端）代理","slug":"nginx-反向-服务端-代理","link":"#nginx-反向-服务端-代理","children":[]},{"level":3,"title":"Proxy代理","slug":"proxy代理","link":"#proxy代理","children":[]}]},{"level":2,"title":"捕获器不变式","slug":"捕获器不变式","link":"#捕获器不变式","children":[]}],"relativePath":"program/specialColumn/设计模式专栏/前端_代理模式.md","lastUpdated":1684480938000}'),p={name:"program/specialColumn/设计模式专栏/前端_代理模式.md"},e=l(`<h1 id="【前端】代理模式" tabindex="-1">【前端】代理模式 <a class="header-anchor" href="#【前端】代理模式" aria-hidden="true">#</a></h1><h2 id="针对一个对象-设置代理控制这个对象的访问-用户需要通过代理访问对象" tabindex="-1">针对一个对象，设置代理控制这个对象的访问，用户需要通过代理访问对象 <a class="header-anchor" href="#针对一个对象-设置代理控制这个对象的访问-用户需要通过代理访问对象" aria-hidden="true">#</a></h2><h2 id="代码演示" tabindex="-1"><a href="https://github.com/zack-xy/try-projects/blob/main/learn-design-mode/src/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F.ts" target="_blank" rel="noreferrer"> 代码演示</a> <a class="header-anchor" href="#代码演示" aria-hidden="true">#</a></h2><h2 id="场景" tabindex="-1">场景 <a class="header-anchor" href="#场景" aria-hidden="true">#</a></h2><h3 id="dom事件代理-委托" tabindex="-1">DOM事件代理（委托） <a class="header-anchor" href="#dom事件代理-委托" aria-hidden="true">#</a></h3><ul><li><p>事件绑定在父元素上，而非目标节点</p><ul><li><p>适合目标较多或数量不确定（如无限加载的瀑布流图片列表）</p><ul><li><p><a href="https://github.com/zack-xy/o-bricks/blob/main/imgLazyLoad/index.html" target="_blank" rel="noreferrer">原生js丐版懒加载图片</a></p></li><li><p><a href="https://github.com/zack-xy/try-projects/blob/main/learn-design-mode/src/dom/index.html" target="_blank" rel="noreferrer">动态增加节点的代码演示</a></p></li></ul></li></ul></li></ul><h3 id="webpack-devserver-proxy-正向-客户端-代理" tabindex="-1">webpack devserver proxy 正向（客户端）代理 <a class="header-anchor" href="#webpack-devserver-proxy-正向-客户端-代理" aria-hidden="true">#</a></h3><h3 id="nginx-反向-服务端-代理" tabindex="-1">nginx 反向（服务端）代理 <a class="header-anchor" href="#nginx-反向-服务端-代理" aria-hidden="true">#</a></h3><h3 id="proxy代理" tabindex="-1"><a href="https://github.com/zack-xy/try-projects/blob/a6002c491c5c8b23305e49a46d6fe20f1fd6496a/learn-es6789/static/lesson2-7.js" target="_blank" rel="noreferrer">Proxy代理</a> <a class="header-anchor" href="#proxy代理" aria-hidden="true">#</a></h3><ul><li><a href="https://github.com/zack-xy/try-projects/blob/main/learn-design-mode/src/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E4%BE%8B%E5%AD%90.ts" target="_blank" rel="noreferrer">代码2</a></li></ul><h2 id="捕获器不变式" tabindex="-1">捕获器不变式 <a class="header-anchor" href="#捕获器不变式" aria-hidden="true">#</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code-dark"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 捕获器不变式</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#A6ACCD;">(obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">y</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">writable</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">configurable</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> proxy </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Proxy</span><span style="color:#A6ACCD;">(obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">get</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(proxy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">x) </span><span style="color:#676E95;font-style:italic;">// abc</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(proxy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">y)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 报错TpeError: &#39;get&#39; on proxy: property &#39;y&#39; is a read-only and non-configurable data property on the proxy target but the proxy did not return its actual value (expected &#39;200&#39; but got &#39;abc&#39;)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 捕获器不变式</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">defineProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;y&#39;</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">writable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">configurable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">proxy</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Proxy</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;abc&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">proxy</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// abc</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">proxy</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 报错TpeError: &#39;get&#39; on proxy: property &#39;y&#39; is a read-only and non-configurable data property on the proxy target but the proxy did not return its actual value (expected &#39;200&#39; but got &#39;abc&#39;)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>`,12),o=[e];function r(c,t,y,i,F,B){return a(),n("div",null,o)}const d=s(p,[["render",r]]);export{D as __pageData,d as default};
