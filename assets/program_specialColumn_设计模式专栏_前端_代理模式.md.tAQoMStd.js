import{_ as a,c as i,o as n,ax as l}from"./chunks/framework.DtvkEc4l.js";const o=JSON.parse('{"title":"【前端】代理模式","description":"","frontmatter":{"title":"【前端】代理模式","author":"Zack Zheng","date":"2022/02/16 09:51","categories":["JavaScript专栏"],"tags":["设计模式"]},"headers":[],"relativePath":"program/specialColumn/设计模式专栏/前端_代理模式.md","filePath":"program/specialColumn/设计模式专栏/前端_代理模式.md","lastUpdated":1684480938000}'),e={name:"program/specialColumn/设计模式专栏/前端_代理模式.md"};function t(h,s,p,r,k,B){return n(),i("div",null,s[0]||(s[0]=[l(`<h1 id="【前端】代理模式" tabindex="-1">【前端】代理模式 <a class="header-anchor" href="#【前端】代理模式" aria-label="Permalink to &quot;【前端】代理模式&quot;">​</a></h1><h2 id="针对一个对象-设置代理控制这个对象的访问-用户需要通过代理访问对象" tabindex="-1">针对一个对象，设置代理控制这个对象的访问，用户需要通过代理访问对象 <a class="header-anchor" href="#针对一个对象-设置代理控制这个对象的访问-用户需要通过代理访问对象" aria-label="Permalink to &quot;针对一个对象，设置代理控制这个对象的访问，用户需要通过代理访问对象&quot;">​</a></h2><h2 id="代码演示" tabindex="-1"><a href="https://github.com/zack-xy/try-projects/blob/main/learn-design-mode/src/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F.ts" target="_blank" rel="noreferrer"> 代码演示</a> <a class="header-anchor" href="#代码演示" aria-label="Permalink to &quot;[ 代码演示](https://github.com/zack-xy/try-projects/blob/main/learn-design-mode/src/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F.ts)&quot;">​</a></h2><h2 id="场景" tabindex="-1">场景 <a class="header-anchor" href="#场景" aria-label="Permalink to &quot;场景&quot;">​</a></h2><h3 id="dom事件代理-委托" tabindex="-1">DOM事件代理（委托） <a class="header-anchor" href="#dom事件代理-委托" aria-label="Permalink to &quot;DOM事件代理（委托）&quot;">​</a></h3><ul><li><p>事件绑定在父元素上，而非目标节点</p><ul><li><p>适合目标较多或数量不确定（如无限加载的瀑布流图片列表）</p><ul><li><p><a href="https://github.com/zack-xy/o-bricks/blob/main/imgLazyLoad/index.html" target="_blank" rel="noreferrer">原生js丐版懒加载图片</a></p></li><li><p><a href="https://github.com/zack-xy/try-projects/blob/main/learn-design-mode/src/dom/index.html" target="_blank" rel="noreferrer">动态增加节点的代码演示</a></p></li></ul></li></ul></li></ul><h3 id="webpack-devserver-proxy-正向-客户端-代理" tabindex="-1">webpack devserver proxy 正向（客户端）代理 <a class="header-anchor" href="#webpack-devserver-proxy-正向-客户端-代理" aria-label="Permalink to &quot;webpack devserver proxy 正向（客户端）代理&quot;">​</a></h3><h3 id="nginx-反向-服务端-代理" tabindex="-1">nginx 反向（服务端）代理 <a class="header-anchor" href="#nginx-反向-服务端-代理" aria-label="Permalink to &quot;nginx 反向（服务端）代理&quot;">​</a></h3><h3 id="proxy代理" tabindex="-1"><a href="https://github.com/zack-xy/try-projects/blob/a6002c491c5c8b23305e49a46d6fe20f1fd6496a/learn-es6789/static/lesson2-7.js" target="_blank" rel="noreferrer">Proxy代理</a> <a class="header-anchor" href="#proxy代理" aria-label="Permalink to &quot;[Proxy代理](https://github.com/zack-xy/try-projects/blob/a6002c491c5c8b23305e49a46d6fe20f1fd6496a/learn-es6789/static/lesson2-7.js)&quot;">​</a></h3><ul><li><a href="https://github.com/zack-xy/try-projects/blob/main/learn-design-mode/src/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E4%BE%8B%E5%AD%90.ts" target="_blank" rel="noreferrer">代码2</a></li></ul><h2 id="捕获器不变式" tabindex="-1">捕获器不变式 <a class="header-anchor" href="#捕获器不变式" aria-label="Permalink to &quot;捕获器不变式&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// 捕获器不变式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> obj</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">  x</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 100</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">  y</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">Object</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">defineProperty</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">obj</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">y</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">  value</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 200</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">  writable</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#FF9CAC;"> false</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">  configurable</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#FF9CAC;"> false</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> proxy</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;"> new</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> Proxy</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">obj</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#F07178;">  get</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">    return</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">abc</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  },</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">console</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">proxy</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">x</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// abc</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">console</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">proxy</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">y</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic;">// 报错TpeError: &#39;get&#39; on proxy: property &#39;y&#39; is a read-only and non-configurable data property on the proxy target but the proxy did not return its actual value (expected &#39;200&#39; but got &#39;abc&#39;)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>`,12)]))}const c=a(e,[["render",t]]);export{o as __pageData,c as default};
