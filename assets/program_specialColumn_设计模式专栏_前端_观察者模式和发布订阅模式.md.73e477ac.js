import{_ as s,c as n,o as a,a as l}from"./app.95cc11b2.js";const D=JSON.parse('{"title":"前端】观察者模式和发布订阅模式","description":"","frontmatter":{"title":"前端】观察者模式和发布订阅模式","author":"Zack Zheng","date":"2022/02/16 09:51","categories":["JavaScript专栏"],"tags":["设计模式"]},"headers":[{"level":2,"title":"观察者模式介绍","slug":"观察者模式介绍","link":"#观察者模式介绍","children":[{"level":3,"title":"奶茶店点奶茶，点完之后不必一直关注，做好了会通知我","slug":"奶茶店点奶茶-点完之后不必一直关注-做好了会通知我","link":"#奶茶店点奶茶-点完之后不必一直关注-做好了会通知我","children":[]}]},{"level":2,"title":"观察者模式代码实现","slug":"观察者模式代码实现","link":"#观察者模式代码实现","children":[]},{"level":2,"title":"观察者模式的场景","slug":"观察者模式的场景","link":"#观察者模式的场景","children":[{"level":3,"title":"DOM事件","slug":"dom事件","link":"#dom事件","children":[]},{"level":3,"title":"Vue、React组件生命周期","slug":"vue、react组件生命周期","link":"#vue、react组件生命周期","children":[]},{"level":3,"title":"Vue watch","slug":"vue-watch","link":"#vue-watch","children":[]},{"level":3,"title":"Vue组件更新过程","slug":"vue组件更新过程","link":"#vue组件更新过程","children":[]},{"level":3,"title":"各种异步回调","slug":"各种异步回调","link":"#各种异步回调","children":[]},{"level":3,"title":"MutationObserver","slug":"mutationobserver","link":"#mutationobserver","children":[]}]},{"level":2,"title":"发布订阅模式（不属于23种设计模式）","slug":"发布订阅模式-不属于23种设计模式","link":"#发布订阅模式-不属于23种设计模式","children":[{"level":3,"title":"场景","slug":"场景","link":"#场景","children":[]},{"level":3,"title":"区别","slug":"区别","link":"#区别","children":[]},{"level":3,"title":"快速区分","slug":"快速区分","link":"#快速区分","children":[]}]}],"relativePath":"program/specialColumn/设计模式专栏/前端_观察者模式和发布订阅模式.md","lastUpdated":1684379250000}'),p={name:"program/specialColumn/设计模式专栏/前端_观察者模式和发布订阅模式.md"},e=l(`<h1 id="【前端】观察者模式和发布订阅模式" tabindex="-1">【前端】观察者模式和发布订阅模式 <a class="header-anchor" href="#【前端】观察者模式和发布订阅模式" aria-hidden="true">#</a></h1><h2 id="观察者模式介绍" tabindex="-1">观察者模式介绍 <a class="header-anchor" href="#观察者模式介绍" aria-hidden="true">#</a></h2><h3 id="奶茶店点奶茶-点完之后不必一直关注-做好了会通知我" tabindex="-1">奶茶店点奶茶，点完之后不必一直关注，做好了会通知我 <a class="header-anchor" href="#奶茶店点奶茶-点完之后不必一直关注-做好了会通知我" aria-hidden="true">#</a></h3><h2 id="观察者模式代码实现" tabindex="-1"><a href="https://github.com/zack-xy/try-projects/blob/main/learn-design-mode/src/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F.ts" target="_blank" rel="noreferrer">观察者模式代码实现</a> <a class="header-anchor" href="#观察者模式代码实现" aria-hidden="true">#</a></h2><h2 id="观察者模式的场景" tabindex="-1">观察者模式的场景 <a class="header-anchor" href="#观察者模式的场景" aria-hidden="true">#</a></h2><h3 id="dom事件" tabindex="-1">DOM事件 <a class="header-anchor" href="#dom事件" aria-hidden="true">#</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code-dark"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> $btn1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#btn1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">$btn1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">click</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">$btn1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">click</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">$btn1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;#btn1&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">$btn1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">click</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"><span style="color:#E5C07B;">$btn1</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">click</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="vue、react组件生命周期" tabindex="-1">Vue、React组件生命周期 <a class="header-anchor" href="#vue、react组件生命周期" aria-hidden="true">#</a></h3><h3 id="vue-watch" tabindex="-1">Vue watch <a class="header-anchor" href="#vue-watch" aria-hidden="true">#</a></h3><h3 id="vue组件更新过程" tabindex="-1">Vue组件更新过程 <a class="header-anchor" href="#vue组件更新过程" aria-hidden="true">#</a></h3><h3 id="各种异步回调" tabindex="-1">各种异步回调 <a class="header-anchor" href="#各种异步回调" aria-hidden="true">#</a></h3><h3 id="mutationobserver" tabindex="-1"><a href="https://github.com/zack-xy/try-projects/blob/main/learn-design-mode/src/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F%E5%9C%BA%E6%99%AFmutation.ts" target="_blank" rel="noreferrer">MutationObserver</a> <a class="header-anchor" href="#mutationobserver" aria-hidden="true">#</a></h3><h2 id="发布订阅模式-不属于23种设计模式" tabindex="-1">发布订阅模式（不属于23种设计模式） <a class="header-anchor" href="#发布订阅模式-不属于23种设计模式" aria-hidden="true">#</a></h2><h3 id="场景" tabindex="-1">场景 <a class="header-anchor" href="#场景" aria-hidden="true">#</a></h3><ul><li><p>场景：自定义事件</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code-dark"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 绑定</span></span>
<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">event-key</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 事件1</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">event-key</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 事件2</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 触发执行</span></span>
<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">emit</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">event-key</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 绑定</span></span>
<span class="line"><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;event-key&#39;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 事件1</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;event-key&#39;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 事件2</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 触发执行</span></span>
<span class="line"><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">emit</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;event-key&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li><p><a href="https://github.com/zack-xy/write-js/blob/main/EventEmitter/eventEmitter.js" target="_blank" rel="noreferrer">EventEmitter手写</a></p></li><li><p>注意⚠️：自定义事件组件销毁时，一定要off，防止内存泄漏</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> emitter </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">../yourEvent.js</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">EventBusDemo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">created</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 绑定事件on</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">emitter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">change</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">changeHandler</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">methods</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">changeHandler</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">chang1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">beforeUnmount</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 解绑事件off</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 注意是同一个事件changeHandler</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">emitter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">off</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">change</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">changeHandler</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><pre class="shiki one-dark-pro vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">emitter</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;../yourEvent.js&#39;</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;EventBusDemo&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">created</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// 绑定事件on</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">emitter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;change&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">changeHandler</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">methods</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">changeHandler</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;chang1&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">beforeUnmount</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// 解绑事件off</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// 注意是同一个事件changeHandler</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">emitter</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">off</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;change&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">changeHandler</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div></li></ul></li><li><p>postMessage通讯</p><ul><li><p><a href="https://github.com/zack-xy/try-projects/blob/main/learn-design-mode/src/iframePostMessage/main.html" target="_blank" rel="noreferrer">网页和iframe的通讯</a></p></li><li><p>多进程(nodejs WebWorker)通讯、WebSocket通讯</p></li></ul></li></ul><h3 id="区别" tabindex="-1">区别 <a class="header-anchor" href="#区别" aria-hidden="true">#</a></h3><ul><li>观察者模式： Subject和Observer直接绑定，中间无媒介</li><li>发布订阅模式： Publisher和Observer互不认识，中间有媒介</li></ul><h3 id="快速区分" tabindex="-1">快速区分 <a class="header-anchor" href="#快速区分" aria-hidden="true">#</a></h3><ul><li>是否有手动触发emit，有就是发布订阅模式</li><li>观察者模式没有手动触发，只能被动等着</li></ul>`,19),o=[e];function r(t,c,i,y,F,B){return a(),n("div",null,o)}const d=s(p,[["render",r]]);export{D as __pageData,d as default};
